from z3 import *

s = [BitVec(f's{i}', 8) for i in range(56)]

z3.BitVecRef.__le__ = lambda self, other: ULE(self, other)
z3.BitVecRef.__ge__ = lambda self, other: UGE(self, other)
z3.BitVecRef.__lt__ = lambda self, other: ULT(self, other)
z3.BitVecRef.__gt__ = lambda self, other: UGT(self, other)


sss = Optimize()
real = 0

asd = 8
sss.add_soft( And(((s[3] + s[26]) & s[32]) < (s[9] + s[25] - s[28]), ((s[15] - s[16]) & s[18]) <= 0x26, (s[14] + s[23] * s[2]) < ((s[24] + s[25]) * s[26]) ), weight=asd)

asd = 1
sss.add_soft( And((s[2] * s[37] - s[43]) <= 0xC7, (s[47] - s[41] + s[11]) >= 0x3D, (s[49] + s[33] - s[5]) >= 0x4D, ((s[13] * s[46]) ^ s[10]) > (s[23] - (s[8] + s[46])) ), weight=asd)

asd = 3
sss.add_soft( And(((s[34] - s[32]) * s[6]) >= 0xF1 , ((s[20] + s[55]) * s[53]) <= 0xE0 ), weight=asd)

asd = 4
sss.add_soft( And(((s[36] - s[29]) | s[4]) > (s[38] + s[47] - s[44]), ((s[24] ^ s[2]) & s[8]) <= 0x23 ), weight=asd)

asd = 9
sss.add_soft( And(((s[25] + s[34]) * s[31]) <= 0xE3, (s[38] & s[43] ^ s[19]) >= 0x12, (s[26] + s[30] + s[49]) >= 0xCB, ((s[15] | s[25]) ^ s[22]) < (s[6] ^ s[55] ^ s[50]), ((s[27] * s[25]) & s[28]) < ((s[1] & s[27]) + s[51]), ((s[40] * s[4]) & s[19]) < ((s[39] ^ s[8]) & s[49]), (s[48] ^ s[53] ^ s[32]) < (s[13] - (s[4] + s[9])) ), weight=asd)

asd = 2
sss.add_soft( And((s[4] + s[26] - s[54]) <= 0x80, (s[31] ^ s[36] ^ s[39]) < (s[41] ^ s[20] | s[46]) ), weight=asd)

asd = 7
sss.add_soft( And(((s[42] & s[23]) | s[24]) >= 0x30, ((s[19] + s[7]) & s[3]) < ((s[6] | s[36]) & s[46]), ((s[12] + s[43]) * s[2]) <= 0xD8, ((s[26] & s[36]) + s[17]) >= 0x63, ((s[40] ^ s[18]) * s[30]) < (s[51] - s[40] + s[16]) ), weight=asd)

asd = 5
sss.add_soft( And(((s[32] ^ s[0]) + s[35]) >= 0x85, ((s[4] * s[54]) ^ s[17]) >= 0x11, (s[24] | s[0] | s[20]) > (s[41] + s[21] - s[13]) ), weight=asd)

v3 = s[34]
asd = 1
sss.add_soft( And(((s[9] * s[44]) & s[34]) > ((s[41] | s[19]) * s[24]), (s[43] - s[53] + s[48]) <= 9, (s[20] ^ s[53] | s[55]) < ((s[27] - s[5]) ^ s[17]), ((s[54] | s[16]) - s[17]) <= 0xCE, ((s[52] + s[53]) | s[7]) < ((s[26] * s[44]) | s[3]), ((s[35] ^ s[44]) & s[54]) >= 5, (s[0] | (s[19] - s[35])) > ((s[46] | s[54])* s[11]), (s[2] & s[38] & s[39]) >= 3, ((s[20] * s[41]) & s[34]) >= 0x19 ), weight=asd)
v3 = s[34]

v4 = s[26]
asd = 7
sss.add_soft( And(((s[16] + s[39]) | s[26]) < ((v3 | s[53]) - s[13]), (s[38] ^ s[44] ^ s[19]) < ((s[52] + s[46]) * s[13]), (s[41] * s[39] * s[37]) <= 0xBF, ((s[22] ^ s[31]) - s[36]) >= 0xFD, ((s[20] ^ s[46]) & s[47]) > ((s[4] | s[33]) - s[45]) ), weight=asd)
v4 = s[26]

asd = 4
sss.add_soft( And(((s[40] | v4) - s[24]) <= 0x41, ((s[2] | s[42]) * s[15]) >= 0x99, ((s[38] + s[18]) ^ s[12]) <= 0xCC ), weight=asd)

asd = 1
sss.add_soft( And((s[21] * s[33] * s[34]) >= 0x26, ((s[42] | s[2]) * s[15]) <= 0x98, ((s[52] & s[8]) | s[33]) < ((s[4] | s[17]) & s[23]) ), weight=asd)

v5 = s[25]
v6 = s[5]
asd = 2
sss.add_soft( And((s[5] * s[25] * s[12]) >= 0xFD, ((s[23] ^ s[26]) * s[39]) <= 0x56, (((s[7] + s[40]) & s[51]) + 52) < (s[28] * s[40] * s[42] - 8), ((s[29] & s[46]) ^ s[33]) >= 0x56 ), weight=asd)
v5 = s[25]
v6 = s[5]

asd = 1
sss.add_soft( And((v6 + v5 + s[4]) <= 0xCF, ((s[35] * s[37]) & s[1]) <= 0x3C, ((s[50] + s[7]) | s[29]) < ((s[48] & s[10]) - s[37]), ((s[13] * s[24]) ^ s[29]) >= 0xFD, (s[9] * s[1] - s[33]) >= 5 ), weight=asd)

asd = 5
sss.add_soft( And(((s[29] & s[19]) + s[35]) >= 0x4D, (s[21] ^ s[53] ^ s[0]) >= 5, (s[6] & s[2] ^ s[14]) < (s[38] + s[2] + s[51]), ((s[8] & s[10]) | s[22]) <= 0x63 ), weight=asd)

asd = 7
sss.add_soft( And(((s[33] - s[44]) | s[15]) >= 0x5C, ((s[47] | s[12]) & s[22]) < (s[0] - (s[2] + s[53])), ((s[42] - s[9]) | s[55]) >= 0xFD ), weight=asd)

asd = 10
sss.add_soft( And((s[13] * s[50] * s[4]) < ((s[11] + s[2]) ^ s[4]), (s[15] & s[20] & s[53]) < ((s[55] & s[35]) - s[11]), (s[39] ^ s[1] | s[48]) <= 0x95, ((s[17] | s[4]) ^ s[41]) < (s[24] * s[15] * s[30]) ), weight=asd)

asd = 8
sss.add_soft( And(((s[35] + s[6]) ^ s[39]) <= 0xAE ), weight=asd)
asd = 1
sss.add_soft( And(((s[30] | s[17]) & s[42]) > (s[55] | s[5] | s[23]), ((s[18] + s[8]) ^ s[42]) >= 0x62, (s[51] + s[27] * s[50]) < (s[15] & s[43] ^ s[50]), (s[55] - s[5] + s[52]) <= 0x7C, ((s[44] | s[42]) * s[4] - 10) < ((s[6] & s[5]) * s[41]), ((s[49] - s[8]) | s[26]) >= 0x42 ), weight=asd)

v7 = s[52]
asd = 8
sss.add_soft( And(((s[33] * s[20]) ^ s[39]) > ((s[2] | s[52]) - s[47]), (s[9] ^ (s[33] + s[2])) >= 0x6F, (s[29] | s[50] | s[43]) <= 0x42, ((s[38] * s[10]) & s[5]) < (s[23] - (s[8] + s[46])) ), weight=asd)
v7 = s[52]

asd = 9
sss.add_soft( And(((s[10] - s[41]) & s[37]) < ((v7 | s[9]) + s[24]), ((s[48] - s[1]) * s[26]) >= 0xB2 ), weight=asd)

v8 = s[35]
asd = 9
sss.add_soft( And(((s[22] - s[18]) & s[51]) < ((s[26] | s[43]) - s[35]), ((s[21] & s[13]) - s[48]) <= 0xFC, ((s[27] ^ s[22]) - s[39]) < ((s[47] ^ s[52]) * s[55]), (s[19] * s[55] - s[9]) >= 0xC6, (s[4] & s[22] & s[53]) >= 0x6F ), weight=asd)
v8 = s[35]

asd = 1
sss.add_soft( And(((s[19] - v8) | s[0]) < (s[55] ^ s[23] ^ s[13]), ((s[20] ^ s[29]) & s[5]) >= 0xF, ((s[49] | s[33]) & s[55]) > (s[18] + s[46] * s[6]) ), weight=asd)

asd = 1
sss.add_soft( And((s[17] + s[20] + s[1]) <= 9, ((s[7] - s[54]) * s[24]) < ((s[55] ^ s[45]) + s[22]) ), weight=asd)

asd = 5
sss.add_soft( And(((s[40] + s[24]) ^ s[55]) < (s[38] + s[47] - s[44]), (s[45] * s[44] * s[25]) <= 0x62, ((s[55] - s[39]) & s[20]) < ((s[10] | s[47]) ^ s[40]), ((s[5] ^ s[26]) & s[39]) > (s[46] | s[12] | s[26]) ), weight=asd)

asd = 3
sss.add_soft( And(((s[25] + s[29]) * s[33]) <= 0x96, ((s[37] ^ s[6]) - s[47]) >= 0xD0, (s[17] - (s[6] + s[25])) <= 0xB5, (s[21] & s[4] | s[16]) >= 0x3C, (s[50] * s[21] - s[39]) <= 8 ), weight=asd)

asd = 1
sss.add_soft( And((s[38] + s[4] + s[27]) < (s[17] - (s[40] + s[12])), ((s[20] + s[51]) & s[55]) < ((s[5] & s[53]) ^ s[35]), ((s[14] | s[25]) ^ s[9]) >= 0x34, (s[2] & s[30] & s[48]) <= 2, ((s[26] - s[15]) & s[34]) > ((s[50] ^ s[13]) + s[51]) ), weight=asd)

v9 = s[15]
asd = 1
sss.add_soft( And((s[3] & s[9] | s[15]) <= 0x53, ((s[25] - s[53]) * s[41]) <= 0xE, ((s[29] | s[4]) & s[43]) <= 0x27 ), weight=asd)
v9 = s[15]

asd = 10
sss.add_soft( And((s[16] - (v9 + s[47])) <= 0xB2, (s[54] * s[37] * s[18]) < ((s[27] + s[26]) * s[51]), ((s[26] - s[8]) ^ s[23]) < (s[0] * s[26] * s[21]), ((s[18] - s[16]) ^ s[54]) >= 0x2D ), weight=asd)

asd = 10
sss.add_soft( And((s[45] + s[0] - s[54]) >= 0x48, ((s[30] + s[35]) & s[55]) < ((s[48] + s[25]) * s[30]), ((s[27] - s[22]) * s[39]) < ((s[36] | s[1]) * s[25]) ), weight=asd)

asd = 7
sss.add_soft( And(((s[6] + s[39]) & s[53]) < ((s[10] + s[31]) * s[27]), ((s[46] & s[30]) + s[36]) >= 0x67, ((s[24] | s[0]) ^ s[10]) >= 0xD, (s[11] ^ s[49] | s[6]) < (s[43] | s[33] | s[4]), (s[20] - (s[7] + s[28])) < (s[32] + s[8] + s[55]) ), weight=asd)

asd = 10
sss.add_soft( And(((s[8] * s[42]) ^ s[0]) > ((s[44] & s[47])- s[43]), ((s[17] * s[45]) | s[12]) <= 0x31, ((s[34] - s[29]) * s[28]) >= 0xBA, ((s[49] + s[51]) & s[31]) <= 0x1C, ((s[46] | s[36]) & s[6]) <= 0x51 ), weight=asd)

asd = 9
sss.add_soft( And(((s[40] ^ s[11]) - s[31]) <= 0x1B, ((s[41] + s[52]) * s[23]) < ((s[49] | s[32]) ^ s[36]), (s[8] * s[49] * s[35]) < (s[53] | s[35] | s[24]), ((s[15] - s[54]) | s[39]) < ((s[25] ^ s[34]) & s[27]) ), weight=asd)

asd = 5
sss.add_soft( And((s[37] & s[20] & s[7]) >= 0x49, ((s[43] - s[24]) & s[35]) < ((s[23] ^ s[20]) * s[17]) ), weight=asd)

v10 = s[12]
asd = 9
sss.add_soft( And(((s[12] | s[5]) & s[4]) < ((s[14] | s[49]) & s[13]), ((s[53] | s[45]) * s[7]) <= 0xFC, ((s[28] * s[33]) & s[8]) < ((s[0] | s[34]) ^ s[5]), ((s[54] ^ s[48]) * s[3]) >= 0x82, ((s[20] ^ s[48]) * s[44]) <= 0x16 ), weight=asd)
v10 = s[12]

asd = 10
sss.add_soft( And(((s[2] * s[1]) | v10) >= 0xCD, ((s[4] ^ s[3]) - s[0]) < ((s[8] + s[34]) | s[14]), ((s[16] | s[20]) & s[48]) < (s[44] - s[16] + s[28]), ((s[22] - s[46]) & s[50]) >= 0x26, ((s[38] + s[46]) | s[54]) < ((s[15] | s[2]) + s[14]), ((s[52] ^ s[8]) + s[13]) < ((s[24] | s[1]) + s[46]), (s[49] & (s[38] | s[14])) < ((s[39] & s[14]) | s[16]) ), weight=asd)

asd = 7
sss.add_soft( And(((s[22] ^ s[14]) & s[47]) <= 2 ), weight=asd)

v11 = s[4]
asd = 4
sss.add_soft( And((s[51] + s[5] + s[4]) <= 0xFC, ((s[33] | s[49]) & s[55]) < ((s[47] - s[14]) | s[33]), ((s[27] | s[44]) ^ s[21]) >= 0x3B ), weight=asd)
v11 = s[4]

asd = 5
sss.add_soft( And((s[43] | v11 | s[33]) < (s[6] + s[46] + s[24]), (s[29] * s[49] * s[15]) <= 0xB3, ((s[37] ^ s[5]) & s[51]) < ((s[14] & s[26]) ^ s[20]) ), weight=asd)

asd = 2
sss.add_soft( And((s[18] - (s[22] + s[28])) <= 0x82, ((s[11] * s[51]) ^ s[2]) <= 0xFC, (s[13] & s[7] & s[8]) <= 0x1E, ((s[23] ^ s[47]) & s[0]) > (s[44] ^ s[10] ^ s[5]), ((s[54] ^ s[10]) - s[16]) <= 0x21, (s[17] | s[23] ^ s[0]) < (s[40] & s[25] & s[41]) ), weight=asd)

asd = 3
sss.add_soft( And(((s[14] ^ s[6]) & s[36]) < ((s[16] | s[20]) & s[48]), (s[17] ^ s[16] | s[53]) >= 0x70, ((s[1] | s[50]) - s[51]) < ((s[3] | s[8]) + s[43]), ((s[55] + s[17]) & s[22]) < ((s[40] + s[18]) | s[31]) ), weight=asd)

asd = 10
sss.add_soft( And(((s[45] & s[21]) * s[37]) < ((s[12] & s[55]) + s[30]), ((s[12] - s[20]) ^ s[32]) < ((s[19] & s[24]) * s[53]), ((s[27] | s[22]) ^ s[8]) >= 0x4D, (s[2] & s[38] & s[39]) <= 2, ((s[1] & s[5]) - s[41]) >= 0xAE ), weight=asd)

asd = 8
sss.add_soft( And((s[29] + s[13] + s[31]) <= 0x93, ((s[27] ^ s[55]) & s[22]) >= 3, (s[0] & s[15] & s[8]) > (s[11] + s[32] - s[19]), ((s[17] * s[16]) ^ s[40]) < ((s[53] & s[52]) ^ s[26]) ), weight=asd)

asd = 1
sss.add_soft( And(((s[1] & s[55]) * s[36]) < (s[10] - (s[18] + s[51])), ((s[28] * s[52]) | s[15]) < ((s[0] | s[51]) * s[9]), ((s[41] + s[51]) * s[9]) >= 0xDC, ((s[17] | s[9]) + s[7]) < ((s[47] & s[44]) - s[43]) ), weight=asd)

asd = 7
sss.add_soft( And((s[15] ^ s[52] ^ s[44]) <= 0x66, ((s[46] & s[30]) + s[36]) <= 0x66, (s[23] * s[48] * s[8]) >= 0x88 ), weight=asd)

v12 = s[39]
asd = 10
sss.add_soft( And(((s[43] ^ s[54]) * s[55]) < (s[45] + s[16] - s[39]), (s[25] & s[37] & s[32]) >= 0x23, (s[36] * s[0] - s[46]) <= 0x1D ), weight=asd)
v12 = s[39]

v13 = s[40]
asd = 5
sss.add_soft( And(((s[2] | s[47]) ^ s[19]) > ((v12 | s[18]) * s[40]), ((s[13] & s[37]) - s[10]) <= 0xA2, ((s[10] - s[31]) ^ s[35]) <= 0x18, ((s[16] + s[51]) * s[24]) < ((s[51] ^ v12) * s[18]), ((s[30] + s[28]) & s[36]) <= 2 ), weight=asd)
v13 = s[40]

v14 = s[49]
asd = 10
sss.add_soft( And(((s[44] * s[27]) | v13) < ((s[11] ^ s[49]) + s[13]), (s[36] * s[30] * s[35]) < ((s[26] - s[36]) * s[22]), ((s[53] - s[48]) * s[1]) < (s[47] + s[18] - s[32]), (s[45] ^ s[16] | v13) <= 0x63, (s[55] | s[53] | s[34]) >= 0x7F, ((s[25] & s[42]) * s[15]) <= 0xCA ), weight=asd)
v13 = s[40]
v14 = s[49]

asd = 2
sss.add_soft( And((s[20] + s[51] * v13) < (s[14] * v14 * s[48]), ((s[28] + s[20]) ^ v13) < ((s[2] & s[0]) + s[11]), (s[24] * s[2] - s[47]) >= 0xDB, (s[55] + s[35] + s[29]) < ((s[4] ^ s[11]) - s[32]), ((s[53] * s[31]) | s[3]) >= 0x5F, ((s[18] & s[2]) + s[11]) < ((s[5] | s[4]) - s[52]) ), weight=asd)

asd = 5
sss.add_soft( And(((s[35] + s[11]) | s[34]) > ((s[21] | s[9]) ^ s[32]), ((s[43] - s[6]) & s[9]) >= 0x12, (s[37] * s[39] * s[41]) >= 0xC0, (s[11] + s[32] + s[28]) < ((s[27] ^ s[25]) * s[41]) ), weight=asd)

v15 = s[3]
asd = 8
sss.add_soft( And(((s[8] | s[3]) + s[43]) < ((s[45] & s[13]) - s[33]), ((s[2] ^ s[40]) - s[17]) >= 0x9D, ((s[21] + s[4]) & s[44]) <= 0x31, ((s[5] * s[4]) ^ s[12]) < ((s[27] + s[43]) | s[8]) ), weight=asd)
v15 = s[3]

v16 = s[52]
asd = 1
sss.add_soft( And(((s[52] & s[53]) ^ s[26]) < ((s[30] & v15) | s[32]), (s[25] & s[41] & s[40]) < ((s[38] | s[47]) & s[9]), (s[34] - s[26] + s[1]) < (s[0] + v15 + s[16]), ((s[33] & s[11]) + s[31]) >= 0x4B, ((s[8] & s[52]) | s[33]) > ((s[35] | s[53])- s[21]) ), weight=asd)
v16 = s[52]

asd = 6
sss.add_soft( And(((v16 | s[27]) ^ s[51]) < ((s[21] | s[12] | s[47]) + 12), ((s[35] + s[30]) & s[55]) > ((s[17] ^ s[45]) + s[7]), ((s[20] + s[32]) * s[49]) < ((s[50] & v16) - s[29]), ((s[19] * s[46]) & s[34]) >= 0x4B, ((s[33] * s[19]) | s[38]) < (s[10] ^ s[6] | s[37]), ((s[5] ^ s[33]) & s[25]) < ((s[31] | s[12]) ^ v16) ), weight=asd)

asd = 1
sss.add_soft( And((s[19] * s[5] - s[32]) <= 0xA1, ((s[17] * s[45]) | s[12]) >= 0x32, ((s[10] - s[9]) ^ s[13]) > ((s[55] * s[4]) ^ s[19]) ), weight=asd)

asd = 6
sss.add_soft( And((s[27] * s[48] * s[22]) <= 0x3A, ((s[34] + s[33]) | s[31]) > ((s[39] ^ s[38]) * s[32]), ((s[23] & s[28]) + s[7]) < (s[45] + s[40] + s[42]) ), weight=asd)

asd = 1
sss.add_soft( And((s[8] + s[37] * s[26]) <= 0x21, ((s[17] * s[15]) | s[48]) > ((s[25] ^ s[27]) * s[41]) ), weight=asd)

asd = 3
sss.add_soft( And(((s[33] * s[20]) ^ s[39]) < ((s[46] | s[23]) * s[39]), ((s[25] & s[2]) * s[42]) >= 0xFA, ((s[53] ^ s[2]) - s[31]) < ((s[21] | s[17]) - s[9]), ((s[4] * s[40]) & s[19]) > ((s[12] ^ s[45]) - s[53]) ), weight=asd)

v17 = s[11]
asd = 9
sss.add_soft( And(((s[49] * s[11]) | s[36]) > ((s[4] | s[5]) - s[52]), ((s[42] - s[50]) & s[5]) <= 0x3A, ((s[17] * s[15]) | s[18]) <= 0xFC, ((s[54] | s[31]) & s[42]) >= 0x27, ((s[7] | s[30]) - s[27]) < (s[1] | s[17] | s[3]), (s[3] ^ (s[30] | s[31])) < (s[44] ^ s[5] ^ s[10]), (s[29] * (s[50] | s[4])) >= 0x64 ), weight=asd)
v17 = s[11]

v18 = s[9]
v19 = s[47]
asd = 10
sss.add_soft( And(((s[9] | v17) ^ s[47]) <= 0x10, (s[12] + s[43] * s[46]) >= 0x73 ), weight=asd)
v19 = s[47]
v18 = s[9]

v20 = s[46]
asd = 4
sss.add_soft( And(((v18 ^ v19) + s[46]) <= 0x55 ), weight=asd)
v20 = s[46]

v21 = s[44]
asd = 4
sss.add_soft( And(((s[42] - s[34]) & s[10]) > ((v20 + s[5]) ^ s[44]), ((s[26] - s[10]) & s[39]) >= 3, (s[19] + s[34] - s[29]) <= 0x52, ((s[51] ^ s[54]) & s[16]) < ((s[23] & s[16]) - s[12]), ((s[14] | s[49]) & s[13]) < ((s[36] * s[23]) & s[32]) ), weight=asd)
v21 = s[44]

asd = 3
sss.add_soft( And(((s[21] | s[12] | s[47]) + 12) < ((s[14] ^ s[29] | v21) - 42), ((s[23] + s[30]) ^ s[38]) <= 0xB8, ((s[47] - s[48]) & s[10]) > (s[6] | s[22] | s[52]), ((s[31] ^ s[24]) + s[54]) < (s[13] + s[19] - s[37]), (s[8] + s[19] - s[35]) >= 0x41, ((s[53] * s[36]) | s[46]) < ((s[42] | s[22]) * s[8]), ((s[25] + s[29]) * s[33]) >= 0x97 ), weight=asd)

v22 = s[31]
asd = 9
sss.add_soft( And(((s[49] + s[51]) & s[31]) >= 0x1D, ((s[22] + s[49]) ^ s[21]) >= 0x8B, ((s[25] & s[53]) | s[27]) < ((s[12] - s[20]) ^ s[32]) ), weight=asd)
v22 = s[31]

asd = 3
sss.add_soft( And(((s[37] + v22) & s[22]) >= 3, ((s[39] + s[14]) & s[22]) >= 3, ((s[40] & s[8]) * s[23]) <= 0x3E, ((s[27] - s[6]) ^ s[23]) < ((s[52] + s[41]) * s[23]) ), weight=asd)

v23 = s[6]
asd = 5
sss.add_soft( And(((s[3] | s[13]) & s[6]) <= 0x6E , (s[5] + s[4] + s[25]) >= 0xD0 ), weight=asd)
v23 = s[6]

asd = 7
sss.add_soft( And((s[5] - (s[31] + s[27])) < ((s[48] * s[47]) | v23), (s[39] ^ v23 | s[13]) >= 0x8A, ((s[33] | s[0]) * s[46]) <= 0x36, ((s[26] | s[48]) & s[29]) <= 0x2D ), weight=asd)

v24 = s[53]
asd = 1
sss.add_soft( And(((s[4] - s[40]) * s[53]) <= 0x54, ((s[48] ^ s[20]) * s[44]) >= 0x17, (s[10] + s[11] + s[28]) < ((s[16] ^ s[51]) + s[49]) ), weight=asd)
v24 = s[53]

asd = 3
sss.add_soft( And(((s[3] & s[31]) | v24) <= 0x58, (s[16] + s[29] * s[0]) < ((s[54] ^ s[51]) & s[16]), (s[29] & v24 & s[5]) >= 0x27, ((s[1] + s[40]) ^ s[15]) < ((s[50] - s[28]) | s[4]) ), weight=asd)

asd = 2
sss.add_soft( And(((s[29] - s[26]) & s[28]) >= 3, ((s[47] | s[10]) * s[2]) < (s[54] - (s[10] + s[15])) ), weight=asd)

asd = 10
sss.add_soft( And(((s[42] & s[13]) ^ s[24]) <= 4, (s[23] ^ s[36] ^ s[12]) >= 0x4D, ((s[20] ^ s[46]) & s[47]) < (s[10] * s[1] - s[53]) ), weight=asd)

asd = 6
sss.add_soft( And((s[38] + s[44] + s[35]) < ((s[12] - s[0]) ^ s[32]), (s[13] | s[2] | s[10]) < (s[14] + s[51] * s[41]), ((s[8] + s[35]) * s[32]) <= 0x58, (s[48] ^ s[19] | s[24]) <= 0x44, ((s[27] * s[6]) ^ s[47]) > (s[25] + s[41] - s[22]), ((s[21] + s[11]) * s[34]) >= 0x71 ), weight=asd)

asd = 1
sss.add_soft( And(((s[27] - s[34]) | s[40]) <= 0xFC, ((s[53] * s[36]) & s[1]) >= 3 ), weight=asd)

asd = 6
sss.add_soft( And(((s[36] ^ s[6]) + s[18]) <= 0x3D, ((s[4] - s[25]) | s[50]) < ((s[2] + s[22]) ^ s[20]), (s[42] + s[18] + s[38]) <= 0xE9, ((s[43] | s[26]) - s[35]) < ((s[45] & s[33]) - s[10]) ), weight=asd)

asd = 6
sss.add_soft( And(((s[49] - s[8]) | s[26]) <= 0x41, ((s[45] | s[34]) + s[14]) <= 0xED ), weight=asd)

asd = 9
sss.add_soft( And(((s[20] | s[51]) ^ s[31]) < (s[13] * s[50] * s[4]), (s[25] ^ s[20] ^ s[53]) <= 0x38, ((s[0] - s[36]) * s[51]) < ((s[19] ^ s[38]) + s[27]), ((s[47] | s[3]) - s[40]) <= 0x1E, ((s[28] - s[13]) ^ s[42]) < ((s[55]- s[39]) & s[20]) ), weight=asd)

asd = 5
sss.add_soft( And((s[28] * s[26] - s[44]) <= 0xFC ), weight=asd)

asd = 9
sss.add_soft( And(((s[30] + s[23]) ^ s[38]) >= 0xB9, ((s[55] + s[3]) * s[5]) <= 0xF5, ((s[43] * s[18]) ^ s[27]) < (s[34] ^ s[13] ^ s[11]) ), weight=asd)

v25 = s[31]
asd = 2
sss.add_soft( And(((s[25] + s[34]) * s[31]) >= 0xE4, ((s[52] | s[54]) ^ s[38]) <= 0x65, (s[37] ^ s[2] | s[14]) >= 0x7A, (s[53] & s[22] & s[24]) > (s[55] ^ s[50] ^ s[6]), ((s[6] & s[2]) ^ s[14]) > ((s[8] - s[45]) | s[31]), (s[49] + s[33] - s[5]) <= 0x4C, ((s[20] | s[34]) - s[41]) >= 0x39 ), weight=asd)
v25 = s[31]

asd = 9
sss.add_soft( And(((s[49] ^ s[26]) & v25) >= 5, ((s[15] & s[10]) | s[0]) < ((s[36] ^ s[44])+ s[53]), (s[13] ^ s[4] ^ s[3]) >= 6, (s[37] | s[9] | s[41]) > (s[39] + s[48] - s[8]), (s[35] ^ s[22] ^ s[29]) < ((s[12] | s[47]) + s[26]) ), weight=asd)

asd = 6
sss.add_soft( And(((s[44] + s[53]) * s[22]) >= 0xCD, (s[45] | s[18] | s[49]) < ((s[33] & s[55]) * s[40]), ((s[39] & s[30]) ^ s[43]) >= 0x14 ), weight=asd)

asd = 4
sss.add_soft( And((s[1] & s[4] & s[45]) <= 2, ((s[15] & s[41]) + s[1]) < ((s[28] | s[13]) + s[23]) ), weight=asd)

asd = 6
sss.add_soft( And((s[55] ^ s[13] | s[15]) <= 0x63, (s[11] + s[26] - s[38] + 26) < (s[24] - (s[2] + s[5]) + 115), ((s[45] & s[11]) + s[42]) <= 0x70, ((s[50] ^ s[22]) - s[15]) >= 0xFD, (s[22] + s[13] - s[33]) <= 0x2E, ((s[4] | s[50]) * s[29]) <= 0x63, ((s[48] + s[30]) & s[15]) >= 3 ), weight=asd)

v26 = s[10]
asd = 7
sss.add_soft( And(((s[29] ^ s[10]) * s[24]) >= 0xC4 ), weight=asd)
v26 = s[10]

v27 = s[0]
asd = 4
sss.add_soft( And(((s[51] | s[0]) * s[9]) < ((s[12] | s[23]) + v26), (s[34] + s[31] - s[48]) >= 0x5B, ((s[53] | s[38]) * s[5]) >= 0x46, ((s[29] - s[13]) | s[8]) < ((s[4] * s[5]) ^ s[12]), ((s[2] - s[25]) | s[17]) > (s[20] + s[27] * s[21]) ), weight=asd)
v27 = s[0]

v28 = s[53]
asd = 5
sss.add_soft( And((v27 | s[53] | s[39]) < ((s[45] & s[32]) + s[42]), (s[31] - v27 + s[48]) <= 0x1A ), weight=asd)
v28 = s[53]

asd = 7
sss.add_soft( And(((s[19] - s[46]) & v28) <= 2, ((s[9] & s[37]) | s[7]) < ((s[44] * v28) ^ s[28]), ((s[51] & s[28]) | s[8]) <= 0x3D, ((s[30] ^ s[44]) * s[12]) >= 0xFD ), weight=asd)

asd = 6
sss.add_soft( And((s[6] | s[40] | s[36]) <= 0x77, ((s[42] - s[34]) & s[10]) < ((s[39] | s[14]) + s[23]) ), weight=asd)

asd = 10
sss.add_soft( And((s[0] * s[14] - s[49]) < (s[8] * s[12] - s[50]), (s[45] - (s[18] + s[52])) <= 0xE9, ((s[28] + s[55]) ^ s[29]) < ((s[23] & s[42]) - s[38]), ((s[31] & s[19]) ^ s[22]) <= 0x6A ), weight=asd)

asd = 3
sss.add_soft( And(((s[7] | s[42]) + s[9]) < ((s[45] & s[21]) * s[37]), ((s[3] - s[24]) & s[30]) >= 3 ), weight=asd)

asd = 1
sss.add_soft( And(((s[50] & s[28]) - s[25]) <= 0xFC ), weight=asd)
v29 = s[51]
asd = 7
sss.add_soft( And((s[36] ^ s[48] | s[39]) < ((s[51] + s[16]) * s[24]), ((s[18] + s[16]) | s[0]) >= 0x81, ((s[3] * s[32]) & s[8]) > (s[12] ^ s[35] | s[55]), (s[31] & s[19] ^ s[22]) >= 0x6B, ((s[43] - s[36]) ^ s[14]) >= 0xD1, (s[10] | s[40] | s[11]) < ((s[6] & s[31]) * s[35]) ), weight=asd)
v29 = s[51]

asd = 8
sss.add_soft( And(((s[0] + s[3]) ^ s[21]) < ((v29 | s[3]) + s[11]), ((s[23] - s[21]) & s[42]) <= 0x3A, (s[6] ^ s[39] | s[13]) <= 0x89, ((s[26] + s[1]) & s[23]) < ((s[20] & s[25]) | s[31]), ((s[16] + s[55]) & s[7]) >= 0x23 ), weight=asd)

asd = 2
sss.add_soft( And(((s[55] * s[52]) & s[27]) < (s[40] + s[49] * s[26]), ((s[6] * s[27]) ^ s[47]) < (s[21] * s[49] - s[36]), (s[19] | s[36] | s[3]) <= 0x8E, (s[20] + (s[6] | s[40])) <= 0xE7 ), weight=asd)

asd = 8
sss.add_soft( And((s[44] * s[0] * s[3]) <= 0x80, (s[15] & s[0] & s[8]) < ((s[48] + s[16]) | s[6]), ((s[35] + s[29]) | s[30]) > ((s[26] - s[36]) * s[22]), (s[28] - s[35] + s[41]) < ((s[34] | s[44]) * s[35]) ), weight=asd)

asd = 10
sss.add_soft( And((s[14] ^ s[45] ^ s[8]) >= 0x60, ((s[24] - s[1]) | s[48]) > ((s[54] ^ s[44])* s[22]), ((s[21] | s[54]) & s[34]) < ((s[36] & s[1]) + s[42]), (s[9] + s[54] - s[39]) <= 0x3C, ((s[23] & s[16]) - s[12]) < (s[16] + s[29] * s[0]) ), weight=asd)

asd = 4
sss.add_soft( And(((s[20] - s[49]) | s[30]) >= 0x6D, (s[42] ^ s[30] ^ s[5]) <= 0x50, ((s[33] * s[39]) & s[19]) > (s[48] - (s[15] + s[16])), ((s[55] & s[27]) - s[8]) >= 0x2C, ((s[6] * s[51]) ^ s[39]) <= 0x15 ), weight=asd)

v30 = s[13]
asd = 2
sss.add_soft( And(((s[13] - s[7]) ^ s[28]) > ((s[12] | s[35])- s[46]), (s[29] - (s[51] + s[6])) <= 0x90, (s[24] & s[53] & s[22]) < ((s[15] | s[25]) ^ s[22]), ((s[1] + s[26]) & s[23]) > (s[3] - (s[11] + s[0])) ), weight=asd)
v30 = s[13]

asd = 8
sss.add_soft( And(((s[16] ^ s[20]) & s[52]) > ((s[42] - s[51]) ^ v30), (s[29] | s[45] | s[27]) >= 0x7F, ((s[10] + s[2]) ^ s[43]) >= 0xAA, (s[48] - (s[10] + s[2])) >= 0x7F ), weight=asd)

asd = 3
sss.add_soft( And((s[31] ^ s[36] ^ s[39]) > ((s[11] - s[12]) * s[6]), (s[6] + s[2] * s[17]) >= 0x3E, ((s[10] & s[11]) | s[53]) <= 0x5D, (s[1] + s[26] + s[3]) >= 0xDF ), weight=asd)

asd = 7
sss.add_soft( And(((s[41] | s[4]) + s[26]) >= 0x9D, ((s[27] | s[44]) - s[20]) < ((s[18] ^ s[40]) * s[30]), ((s[51] + s[48]) * s[49]) <= 0x31, ((s[48] - s[21]) ^ s[14]) < ((s[0] ^ s[44]) + s[45]) ), weight=asd)

asd = 10
sss.add_soft( And(((s[17] ^ s[38]) & s[35]) <= 2, ((s[28] | s[11]) - s[50]) >= 0xFD, ((s[55] + s[36]) * s[22]) >= 0x1E ), weight=asd)

asd = 5
sss.add_soft( And(((s[34] - s[37]) | s[8]) >= 0xFB, (s[46] | s[26] | s[12]) > ((s[40] | s[37]) - s[6]) ), weight=asd)

asd = 2
sss.add_soft( And(((s[4] & s[52]) ^ s[17]) > ((s[2] & s[36]) * s[0]), ((s[46] ^ s[20]) * s[15]) >= 0x7F ), weight=asd)

asd = 4
sss.add_soft( And(((s[20] * s[41]) & s[34]) <= 0x18, ((s[7] | s[46]) & s[26]) > (s[40] + s[26] * s[49]), ((s[26] - s[6]) ^ s[21]) < ((s[10] & s[14]) | s[22]), ((s[23] + s[22]) * s[30]) <= 0xD6, ((s[38] + s[40]) | s[51]) < (s[0] * s[36] * s[37]), ((s[47] - s[14]) | s[33]) < (s[18] + s[6] * s[46]), ((s[13] - s[42]) ^ s[12]) < ((s[15] & s[14]) * s[35]) ), weight=asd)

asd = 8
sss.add_soft( And(((s[11] - s[16]) & s[14]) >= 5, (s[25] + s[46] - s[32]) <= 0x2B, ((s[45] - s[15]) * s[9]) <= 0xD9, (s[37] | s[0] | s[3]) < ((s[31]* s[32]) & s[45]), ((s[52] & s[46] & s[55]) - 73) < ((s[44] | s[42]) * s[4] - 10) ), weight=asd)

asd = 1
sss.add_soft( And(((s[5] ^ s[32]) - s[24]) < ((s[49] | s[32]) - s[38]), ((s[12] | s[15]) & s[19]) <= 0x39 ), weight=asd)

asd = 7
sss.add_soft( And(((s[7] | s[11]) * s[42]) >= 0x2E , ((s[13] & s[21]) - s[48]) >= 0xFD ), weight=asd)

v31 = s[0]
asd = 6
sss.add_soft( And(((s[24] - s[4]) & s[0]) <= 0x10, ((s[7] & s[32]) * s[30]) <= 0xF0, ((s[10] - s[5]) | s[14]) < ((s[4] - s[19]) | s[55]), ((s[33] | s[45]) & s[21]) < (s[15] + s[10] - s[54]), ((s[42] | s[36]) - s[20]) < ((s[35] | s[31]) - s[20]), ((s[17] | s[30]) & s[42]) < ((s[16] ^ s[3]) * s[42]) ), weight=asd)
v31 = s[0]

asd = 7
sss.add_soft( And(((s[52] + s[25]) | v31) < (s[23] - s[19] + s[33]), ((s[30] - s[34]) * s[32]) >= 3, ((s[14] ^ s[30]) * s[41]) <= 0x7E, (s[53] & s[7] & s[54]) >= 0x25 ), weight=asd)

asd = 3
sss.add_soft( And(((s[2] & s[17]) | s[9]) > ((s[26] & s[51]) + s[1]), (s[10] | s[23] | s[6]) <= 0x90 ), weight=asd)

asd = 3
sss.add_soft( And((s[14] + s[22] - s[28]) < ((s[25] * s[27]) & s[28]), ((s[44] & s[12]) - s[40]) <= 0xB6, ((s[0] ^ s[32]) + s[35]) <= 0x84 ), weight=asd)

v32 = s[18]
v33 = s[11]
asd = 8
sss.add_soft( And(((s[11] ^ s[4]) - s[32]) < ((s[30] + s[18]) * s[5]), ((s[27] | s[53]) * s[31]) <= 0x45, (s[14] ^ s[53] | s[17]) > ((s[52] & s[50]) - s[29]) ), weight=asd)
v33 = s[11]
v32 = s[18]

asd = 9
sss.add_soft( And((s[7] - v33 + v32) >= 0x52, ((s[28] * s[15]) | s[52]) <= 0x84, (s[53] | s[0] | s[39]) > ((s[50] & v33) + s[26]), (s[9] & s[15] & s[33]) < (s[51] * s[29] - s[32]) ), weight=asd)

v34 = s[24]
asd = 2
sss.add_soft( And(((s[24] - s[48]) | s[35]) <= 0xDB, ((s[40] * s[37]) | s[19]) <= 0xC9, ((s[30] ^ s[44]) * s[12]) <= 0xFC ), weight=asd)
v34 = s[24]

asd = 9
sss.add_soft( And(((s[3] & v34) | s[27]) >= 0x4B, ((s[38] * s[10]) & s[5]) > ((s[13] * s[46]) ^ s[10]) ), weight=asd)

asd = 7
sss.add_soft( And(((s[45] & s[51]) - s[13]) < ((s[20] ^ s[46]) * s[44]), (s[12] | s[20] | s[16]) >= 0x8A, ((s[35] + s[52]) & s[21]) <= 0x20, ((s[40] * s[43]) ^ s[36]) >= 0x8C ), weight=asd)

asd = 9
sss.add_soft( And(((s[16] + s[4]) | s[15]) > ((s[37] & s[1])* s[40]), ((s[42] ^ s[33]) - s[19]) >= 0x18 ), weight=asd)

asd = 8
sss.add_soft( And(((s[44] & s[8]) ^ s[49]) < ((s[27] & s[0]) | s[30]), ((s[31] ^ s[20]) & s[25]) >= 0x14 ), weight=asd)

asd = 10
sss.add_soft( And(((s[15] + s[18]) & s[11]) < ((s[3] + s[26]) & s[32]), ((s[4] | s[32]) & s[41]) < ((s[16] & s[51]) + s[38]), ((s[48] & s[10]) - s[37]) < ((s[12] | s[18]) - s[52]), ((s[21] ^ s[52]) & s[27]) <= 2, (s[14] * s[26] * s[2]) >= 0xF ), weight=asd)

v35 = s[20]
asd = 6
sss.add_soft( And(((s[24] - s[1]) | s[48]) < ((s[54] + s[20]) | s[27]), (s[39] + s[37] - s[52]) >= 0x69, (s[45] + s[16] + s[8]) <= 0x87, ((s[51] & s[14]) | s[8]) <= 0x3E, ((s[34] + s[33]) | s[31]) < (s[34] & s[37] & s[25]), ((s[41] | s[35]) & s[47]) <= 0x26, ((s[17] * s[24]) ^ s[0]) > (s[44] * s[11] * s[21]) ), weight=asd)
v35 = s[20]

v36 = s[38]
asd = 5
sss.add_soft( And(((s[26] & s[14]) ^ v35) < (s[32] * s[31] - s[38]), ((s[40] * s[43]) & s[7]) < ((s[39] & s[44]) | s[14]), (s[45] * (s[43] + s[32])) >= 0x97, ((s[37] + s[7]) * s[45]) <= 0x93, ((s[17] ^ s[7]) * v35) < (s[17] ^ s[7] | s[24]), ((s[46] ^ s[37]) - s[28]) < ((s[22] ^ s[27]) - s[39]) ), weight=asd)
v36 = s[38]

asd = 4
sss.add_soft( And(((s[22] + s[21]) & s[43]) > (v36 ^ s[1] | s[28]), (s[29] & s[34] | s[51]) >= 0x2A, ((s[48] + s[30]) & s[15]) <= 2, (s[0] ^ s[20] ^ s[8]) <= 6, ((s[35] - s[47]) ^ s[23]) <= 0xA2, (s[14] + s[34] - s[31]) < ((s[19] - s[23]) ^ s[10]), (s[27] * s[45] - s[21]) <= 0x51, ((s[33] * s[25]) ^ s[42]) >= 0x51, (s[10] * s[1] - s[53]) < ((s[4] | s[33]) - s[45]) ), weight=asd)

asd = 6
sss.add_soft( And(((s[48] + s[31]) ^ s[47]) < ((s[7] & s[17]) - s[0]), ((s[5] | s[24]) - s[16]) <= 4, ((s[14] & s[51]) | s[8]) >= 0x3F, ((s[40] * s[46]) ^ s[53]) < (s[32] * s[41] * s[35]) ), weight=asd)

asd = 2
sss.add_soft( And((s[29] & s[21] ^ s[51]) < ((s[19] | s[39]) - s[29]), ((s[6] & s[5]) * s[41]) < ((s[46] & s[52] & s[55]) - 73), ((s[50] - s[16]) | s[5]) >= 0x3F, (s[20] * s[49] * s[38]) >= 0x53, ((s[44] | s[47]) ^ s[50]) >= 5 ), weight=asd)

asd = 3
sss.add_soft( And(((s[14] ^ s[43]) + s[9]) >= 0x88 ), weight=asd)

v37 = s[26]
asd = 9
sss.add_soft( And(((s[26] ^ s[34]) - s[10] - 44) < ((s[4] * s[25]) ^ s[18]), (s[29] ^ s[13] | s[32]) > ((s[28] + s[10]) | s[25]), (s[21] + s[44] + s[9]) >= 0xB8, (s[14] * s[26] * s[2]) <= 0xE, ((s[1] ^ s[18]) - s[8]) <= 0x47 ), weight=asd)
v37 = s[26]

asd = 8
sss.add_soft( And(((s[21] - s[35]) | s[5]) < ((s[51] & v37) + s[1]), (s[45] + s[16] - s[39]) < (s[44] * s[16] * s[42]), ((s[23] | s[47]) + s[11]) < (s[36] + s[53] - s[8]), ((s[10] + s[22]) & s[11]) < (s[54] * s[18] * s[37]), ((s[55] ^ s[43]) & s[30]) >= 0x38 ), weight=asd)

asd = 1
sss.add_soft( And(((s[0] - s[41]) ^ s[18]) <= 0x27, ((s[33] * s[28]) & s[8]) > (s[49] - (s[20] + s[53])) ), weight=asd)

asd = 2
sss.add_soft( And(((s[30] & s[45]) * s[21]) < ((s[17] & s[52]) - s[34]), ((s[19] ^ s[6]) - s[32]) >= 0x1E ), weight=asd)

asd = 9
sss.add_soft( And(((s[48] & s[36]) * s[11]) >= 0xCD, ((s[2] + s[10]) ^ s[43]) <= 0xA9, ((s[35] ^ s[48]) + s[37]) <= 0x6E, ((s[29] + s[35]) | s[30]) < (s[35] * s[36] * s[30]) ), weight=asd)

v38 = s[47]
asd = 1
sss.add_soft( And((s[47] ^ s[35] ^ s[18]) <= 0x3E, ((s[24] ^ s[4]) & s[26]) > ((s[22] * s[52]) ^ s[14]), (s[2] - s[37] + s[42]) <= 0x18, ((s[25] | s[14]) ^ s[9]) <= 0x33, ((s[5] ^ s[36]) - s[52]) >= 0x1A, ((s[10] | s[17]) + s[50]) < ((s[30] + s[27]) * s[36]), ((s[15] | s[26]) * s[6]) >= 0xE8, ((s[15] - s[54]) | s[39]) > ((s[16] & s[50]) - s[38]), ((s[31] & s[10]) - s[29]) < (s[30] - s[35] + s[48]) ), weight=asd)
v38 = s[47]

asd = 5
sss.add_soft( And(((s[29] + s[3]) * v38) >= 0x67, ((s[11] ^ s[45]) * s[27]) >= 0x4C, ((s[9] & s[28]) | s[43]) < ((s[49] ^ s[40]) & s[12]), ((s[24] - s[38]) * s[17]) < ((s[30] | s[7]) - s[27]), ((s[33] | s[30]) * v38) < ((s[39] & s[7]) * s[35]) ), weight=asd)

asd = 7
sss.add_soft( And(((s[45] - s[1]) | s[13]) < ((s[30] & s[45])* s[21]), ((s[10] * s[15]) ^ s[28]) <= 0x6E, ((s[11] | s[32]) * s[16]) >= 0xE5, ((s[9] * s[15]) & s[32]) > ((s[14] & s[8]) + s[55]) ), weight=asd)

v39 = s[24]
v40 = s[18]
asd = 8
sss.add_soft( And(((s[24] ^ s[44]) * s[18]) < (s[41] + s[28] - s[35]), (s[6] & s[44] | s[16]) < (s[20] - s[44] + s[2]), (s[23] - s[19] + s[33]) < ((s[43] ^ s[13]) + s[7]), (s[4] + s[54] * s[7]) <= 0x38, (s[46] * s[9] - s[7]) >= 0x64, ((s[0] | s[34]) ^ s[5]) < (s[49] - (s[20] + s[53])), ((s[42] + s[52]) | s[8]) < ((s[32] ^ s[39])- s[37]), (s[29] & (s[53] | s[0])) < ((s[10] - s[46]) | s[44]), ((s[27] & s[11]) ^ s[14]) < (s[37] | (s[4] & s[44])) ), weight=asd)
v40 = s[18]
v39 = s[24]

asd = 9
sss.add_soft( And(((s[32] | v40) ^ s[20]) < ((s[5] + v39) & s[16]), ((s[43] + s[27]) | s[8]) < ((s[29] - s[13]) | s[8]), ((s[42] | s[10]) * s[30]) >= 0xC3, ((s[39] * s[36]) | s[9]) <= 0xC2 ), weight=asd)

asd = 9
sss.add_soft( And((s[47] + s[27] + s[17]) < ((s[35] & s[42]) + s[7]), ((s[4] & s[19]) + s[26]) <= 0x63, ((s[48] * s[31]) | s[16]) < (s[51] & s[54] & s[28]), ((s[14] ^ s[0]) * s[30]) <= 0x17 ), weight=asd)

asd = 9
sss.add_soft( And((s[32] * s[55] * s[5]) >= 0xA1, (s[48] ^ s[43] ^ s[11]) >= 0x33, ((s[12] & s[55]) + s[30]) < ((s[42] | s[7]) + s[9]) ), weight=asd)

asd = 9
sss.add_soft( And(((s[22] | s[6]) * s[44]) >= 0x17, (s[8] + s[16] + s[45]) >= 0x88, (s[21] + s[37] - s[47]) >= 0x5B, ((s[39] ^ s[51]) * s[18]) < (s[48] ^ s[36] | s[39]) ), weight=asd)

asd = 10
sss.add_soft( And((s[26] + s[32] - s[16]) <= 0x40, (s[35] | s[24] | s[53]) < ((s[17] & s[50]) - s[48]), ((s[2] - s[4]) & s[37]) >= 0x35, ((s[23] ^ s[25]) & s[12]) <= 2, (s[36] * s[37] * s[0]) < (s[55] - (s[30] + s[7])) ), weight=asd)

asd = 10
sss.add_soft( And((s[15] + s[20] - s[1]) <= 0x92, (s[51] ^ (s[23] + s[15])) > ((s[5] ^ s[23]) + s[14]), ((s[43] * s[40]) ^ s[36]) <= 0x8B, ((s[10] ^ s[19]) * s[25]) >= 0x14, ((s[21] | s[36]) & s[54]) < (s[16] | s[41] | s[9]), ((s[4] + s[16]) & s[10]) < ((s[11] & s[16]) - s[10]), (s[9] & s[36] & s[46]) < ((s[4] | s[36]) & s[23]), (s[52] - (s[41] + s[19])) <= 0xD5 ), weight=asd)

asd = 1
sss.add_soft( And((s[13] ^ s[4] ^ s[3]) <= 5, ((s[17] | s[30]) ^ s[39]) > ((s[25] + s[24]) * s[26]), (s[18] * s[15] * s[1]) <= 0xC9, ((s[2] | s[15]) + s[14]) < (s[21] + s[55] * s[6]), ((s[42] - s[50]) & s[5]) >= 0x3B ), weight=asd)

v41 = s[20]
asd = 1
sss.add_soft( And(((s[1] | s[45]) & s[14]) > (s[20] * s[48] * s[17]), ((s[19] - s[32]) & s[28]) <= 2, ((s[50] - s[22]) & s[11]) >= 0x12, ((s[53] | s[54]) & s[27]) < ((s[12] - s[42]) & s[49]), ((s[47] | s[12]) + s[26]) < ((s[29] ^ s[15]) * s[31]) ), weight=asd)
v41 = s[20]

asd = 4
sss.add_soft( And((s[44] & s[7] & s[23]) < (s[15] & v41 & s[53]), ((s[26] ^ s[6]) & s[13]) >= 0x15, ((s[28] ^ s[44]) & s[43]) < (s[51] + s[23] + s[36]) ), weight=asd)

asd = 5
sss.add_soft( And(((s[17] & s[2]) | s[9]) < ((s[21] - s[35]) | s[5]), ((s[16] & s[42]) * s[3]) < ((s[8] * s[21]) | s[40]), (s[27] * (s[8] | s[5])) >= 0x66, ((s[13] ^ s[47]) + s[8]) <= 0x42, ((s[26] + s[49]) ^ s[23]) < ((s[39] | s[18]) * s[40]) ), weight=asd)

v42 = s[53]
asd = 2
sss.add_soft( And((s[53] * s[32] - s[15]) >= 0xC0, (s[42] * s[44] * s[16]) < ((s[54] ^ s[43]) * s[55]), (s[36] - (s[21] + s[47])) <= 0xE6, (s[51] + s[36] + s[23]) < ((s[31] & s[15]) + s[9]) ), weight=asd)
v42 = s[53]

asd = 10
sss.add_soft( And(((s[34] | v42) - s[13]) < (s[50] ^ s[21] | s[40]), ((s[55] * s[37]) & s[24]) < ((s[44] & s[6]) | s[16]), ((s[12] ^ s[8]) & s[2]) <= 2, ((s[36] + s[13]) & s[30]) <= 2, ((s[27] ^ s[50]) + s[15]) <= 0xD5, ((s[8] | s[34]) - s[31]) < ((s[25] + s[2]) * s[32]) ), weight=asd)
v42 = s[53]

asd = 10
sss.add_soft( And(((s[52] + s[38]) & v42) < (s[43] ^ s[38] ^ s[15]), ((s[36] + s[44]) * s[23]) < (s[10] + s[21] - s[45]), ((s[31] ^ s[38]) & s[47]) >= 0xF ), weight=asd)

asd = 7
sss.add_soft( And((s[21] + s[31] - s[46]) <= 0x42, ((s[37] ^ s[52]) + s[42]) <= 0x95, (s[2] | s[51] | s[6]) < (s[10] * s[2] * s[15]) ), weight=asd)

asd = 7
sss.add_soft( And((s[24] & s[30] & s[33]) < ((s[52] ^ s[12]) * s[35]), ((s[28] & s[48]) | s[21]) <= 0x35, (s[2] + s[18] * s[34]) < ((s[1] + s[33]) * s[16]), (s[26] - s[16] + s[32]) >= 0x41, (s[45] - (s[25] + s[0])) < (s[44] & s[8] ^ s[49]), ((s[22] + s[19]) & s[40]) > ((s[4] & s[44]) + s[2]) ), weight=asd)

v43 = s[26]
asd = 5
sss.add_soft( And(((s[26] | s[28]) - s[38]) <= 0xF3, (s[39] + s[37] - s[52]) <= 0x68, ((s[36] & s[19]) | s[32]) <= 0x40, ((s[29] + s[3]) * s[47]) <= 0x66, ((s[21] & s[4]) | s[16]) <= 0x3B, (s[18] ^ s[47] ^ s[35]) >= 0x3F ), weight=asd)
v43 = s[26]

v44 = s[34]
asd = 4
sss.add_soft( And(((v43 - s[15]) & s[34]) < ((s[51] ^ s[34])- s[50]), ((s[42] ^ s[0]) + s[50]) < ((s[51] - s[24]) * s[27]), ((s[16] + s[4]) | s[15]) < ((s[49] & s[43]) + s[17]), ((s[21] & s[34]) + s[49]) >= 0x66, ((s[3] ^ v43) & s[17]) >= 0x5D, (s[13] ^ s[3] ^ s[41]) >= 0x36 ), weight=asd)
v44 = s[34]

asd = 6
sss.add_soft( And(((s[7] + s[31]) & v44) < (s[9] - (s[11] + s[41])), ((s[0] | s[4]) ^ s[27]) >= 0x15, ((s[55] * s[4]) ^ s[19]) > ((s[54] ^ s[28])* s[20]), (s[14] | s[7] | s[1]) < (s[52] | (s[20] * s[0])) ), weight=asd)

v45 = s[45]
asd = 9
sss.add_soft( And((s[45] | s[49] | s[18]) > ((s[55] | s[52]) & s[6]), ((s[24] & s[32]) | s[13]) > (s[27] + s[51] + s[29]), (s[49] - (s[18] + s[26])) >= 0xF2, ((s[7] + s[17]) | s[30]) >= 0xFD, (s[0] + s[4] * s[11]) <= 0xAE, ((s[46] * s[51]) | s[34]) < ((s[0] - s[36]) * s[51]), ((s[16] + s[55]) & s[7]) <= 0x22 ), weight=asd)
v45 = s[45]

asd = 1
sss.add_soft( And(((s[1] | v45) & s[14]) < ((s[15]+ s[20]) & s[28]), ((s[24] | s[1]) + s[46]) < ((s[27] ^ s[46]) & s[9]), ((s[35] * s[11]) ^ s[38]) >= 0x43, (s[51] + s[16] - s[40]) < ((s[44] | s[27]) - s[20]), (s[47] ^ s[16] | s[39]) > ((s[36] | s[1]) * s[25]) ), weight=asd)

asd = 2
sss.add_soft( And(((s[5] | s[54]) ^ s[7]) >= 0x5A, (s[23] & s[47] & s[8]) >= 0x34, ((s[53] * s[44]) ^ s[28]) < ((s[29] * s[15]) ^ s[43]) ), weight=asd)

v46 = s[25]
asd = 5
sss.add_soft( And((s[30] + s[32] - s[25]) <= 0x60, ((s[23] & s[34]) + s[55]) >= 0xC2, ((s[7] + s[19]) & s[3]) > ((s[41] ^ s[36]) + s[52]) ), weight=asd)
v46 = s[25]

asd = 7
sss.add_soft( And(((v46 | s[0]) & s[54]) <= 0x40, (s[10] + s[11] * v46) <= 2, ((s[8] * s[42]) ^ s[0]) < ((s[9] | s[17]) + s[7]) ), weight=asd)

v47 = s[47]
v48 = s[5]
asd = 10
sss.add_soft( And(((s[5] | s[47]) ^ s[42]) < ((s[19] & s[3]) + s[17]), ((s[31] ^ s[22]) & s[49]) >= 0xC, ((s[43] - s[36]) ^ s[14]) <= 0xD0, (s[45] + s[35] * s[47]) <= 0xF8, (s[44] * s[41] - s[43]) < (s[44] ^ s[19] ^ s[38]) ), weight=asd)
v47 = s[47]
v48 = s[5]

asd = 6
sss.add_soft( And((v47 * s[55] - v48) >= 0x85, ((s[32] + s[19]) & s[43]) <= 0x25 ), weight=asd)

asd = 6
sss.add_soft( And(((s[6] & s[28]) - s[26]) <= 0xEE ), weight=asd)

asd = 3
sss.add_soft( And(((s[10] & s[53]) * s[49]) < ((s[33] ^ s[13]) - s[1]), ((s[12] & s[23]) + s[4]) >= 0xAF ), weight=asd)

asd = 9
sss.add_soft( And(((s[5] ^ s[41]) * s[16]) >= 0x4A , ((s[3] ^ s[23]) + s[31]) <= 0xC4 ), weight=asd)

asd = 6
sss.add_soft( And(((s[23] & s[28]) * s[43]) >= 0x68, ((s[17] & s[7]) - s[0]) < (s[40] * s[43] * s[21]), (s[50] | s[43] | s[29]) >= 0x43, (s[10] & s[8] | s[22]) >= 0x64, ((s[51] & s[24]) + s[27]) < (s[24] * s[23] * s[4]), ((s[39] + s[49]) | s[8]) <= 0x6D, (s[2] * s[40] - s[12]) >= 0xFA, ((s[48] | s[28]) * s[31]) <= 0x3C ), weight=asd)

asd = 4
sss.add_soft( And(((s[16] | s[27]) - s[3]) < ((s[30] | s[33]) * s[47]), ((s[21] & s[16]) + s[15]) >= 0x9E, ((s[2] * s[1]) | s[12]) <= 0xCC, ((s[44] & s[39]) | s[14]) < ((s[26] + s[25]) ^ s[22]) ), weight=asd)

v49 = s[52]
v50 = s[24]
asd = 10
sss.add_soft( And(((s[50] ^ s[35]) + s[54]) < (s[52] + s[35] + s[24]), ((s[55] ^ s[7]) * s[39]) >= 0xD3, ((s[3] * s[53]) & s[19]) < ((s[28] + s[55]) ^ s[29]), ((s[16] | s[50]) & s[44]) < ((s[11] & s[27]) ^ s[14]) ), weight=asd)
v50 = s[24]
v49 = s[52]

asd = 3
sss.add_soft( And(((v49 * s[25]) | s[9]) > (s[17] + v50 + s[0]), ((s[44] - s[42]) | s[29]) < ((s[16]+ s[4]) & s[10]), ((s[40] | s[6]) + s[20]) >= 0xE8, ((s[53] & s[36]) - s[4]) < (s[34] - s[26] + s[1]), (s[36] + s[21] * s[19]) >= 0x3E ), weight=asd)

v51 = s[27]
asd = 6
sss.add_soft( And(((s[31] + s[10]) * s[27]) < ((s[2] ^ s[32]) & s[4]), (s[43] * s[22] - s[27]) >= 0xBC, ((s[47] & s[19]) | s[52]) <= 0x38, ((s[47] - s[42]) & s[5]) <= 2, (s[14] | (s[10] - s[5])) > ((s[55] ^ s[6])- s[19]), ((s[51] & s[16]) + s[38]) < ((s[39] ^ s[9]) + s[20]), ((s[23] | s[46]) * s[39]) < ((s[52] | s[2]) - s[47]) ), weight=asd)
v51 = s[27]

asd = 9
sss.add_soft( And((s[45] & s[37] & v51) < (s[15] - (s[54] + s[7])), ((s[52] | s[55]) & s[6]) > ((s[33] & s[55]) * s[40]), ((s[22] & s[40]) | s[5]) >= 0x5B, (s[32] | (s[6] & s[54])) < ((s[29] + s[33])* s[21]), (s[20] ^ s[37] | s[25]) < ((s[4] - s[25]) | s[50]), ((s[48] + s[23]) & s[33]) < ((s[1] & s[45]) * s[20]), ((s[46] | s[4]) & s[23]) < (s[50] * s[4] * s[34]), ((s[35] & s[42]) | s[6]) >= 0x6D, (s[10] ^ s[5] ^ s[26]) > ((s[49] ^ s[11]) + s[13]) ), weight=asd)

asd = 3
sss.add_soft( And(((s[44] | s[34]) * s[35]) < ((s[24] ^ s[44]) * s[18]), (s[42] & s[16] | s[15]) >= 0x8E, (s[20] + s[22] * s[24]) <= 0x11, (s[49] * s[22] * s[8]) <= 0x30, ((s[43] ^ s[23]) * s[26]) < (((s[42] - s[32]) & s[39]) + 65) ), weight=asd)

v52 = s[23]
asd = 6
sss.add_soft( And(((s[47] | s[36]) - s[53]) < ((s[42] | s[9]) ^ s[23]), (s[7] & s[23] & s[44]) > ((s[35] & s[55]) - s[11]), (s[40] + s[32] * s[42]) >= 0x25, (s[46] + s[24] - s[10]) < ((s[17] ^ s[7]) * s[20]), ((s[41] + s[23]) & s[40]) <= 0x5F, ((s[33] - s[35]) * s[44]) < ((s[51] & s[24]) + s[27]), ((s[20] - s[49]) | s[30]) <= 0x6C ), weight=asd)
v52 = s[23]

asd = 9
sss.add_soft( And((s[22] - s[18] + s[24]) < ((s[20] + v52) * s[34]), ((s[4] ^ s[32]) - s[50]) >= 0x11, ((s[32] - s[8]) ^ s[14]) >= 0x8B, (s[53] ^ s[20] | s[55]) > ((s[28] & s[41]) - s[12]) ), weight=asd)

asd = 3
sss.add_soft( And(((s[8] | s[55]) - s[3]) >= 0x3A, (s[19] * s[36] * s[20]) < ((s[44] + s[36]) * s[23]), ((s[41] ^ s[44]) * s[26]) >= 3 ), weight=asd)

asd = 8
sss.add_soft( And((s[51] ^ s[0] ^ s[47]) <= 0x5A, ((s[11] | s[26]) + s[37]) <= 0x81, ((s[1] - s[34]) ^ s[33]) >= 0x83 ), weight=asd)

v53 = s[49]
asd = 3
sss.add_soft( And((s[49] + s[36] - s[14]) < (s[17] & s[39] | s[11]), ((s[40] | s[49]) & s[11]) <= 0x35 ), weight=asd)
v53 = s[49]

v54 = s[18]
asd = 8
sss.add_soft( And(((s[19] ^ s[20]) & v53) > ((s[34] | s[48]) * s[18]), ((s[53] & s[9]) | s[28]) <= 0x2C, ((s[3] | s[32]) + s[34]) <= 0xBB, ((s[30] * s[2]) | s[20]) >= 0x81, (s[29] ^ s[13] | s[32]) < ((s[38]- s[42]) & s[41]), (s[10] ^ s[41] | s[54]) > ((s[32] | v53) - s[38]) ), weight=asd)
v54 = s[18]

v55 = s[12]
asd = 5
sss.add_soft( And((s[10] - (v54 + s[51])) < (s[5] | s[12] | s[31]), ((s[27] ^ s[50]) + s[15]) >= 0xD6, ((s[2] - s[4]) & s[37]) <= 0x34, ((s[43] * s[5]) ^ s[2]) <= 0xB5, ((s[45] | s[37]) ^ s[17]) <= 0xB, (((s[11] * s[16]) | s[34]) + 77) < ((s[1] & s[53]) * s[10]) ), weight=asd)
v55 = s[12]

asd = 1
sss.add_soft( And(((s[46] + s[29]) ^ v55) >= 0x50, (s[39] ^ s[38] | s[42]) <= 0x85, (s[0] + s[4] * s[11]) >= 0xAF, ((s[9] * s[42]) | s[4]) >= 0xFD ), weight=asd)
v55 = s[12]

asd = 9
sss.add_soft( And((s[39] ^ s[40] ^ v55) < ((s[49] - s[20]) * v55), (s[55] + s[9] - s[13]) >= 0x7B, (s[49] - (s[18] + s[26])) <= 0xF1, ((s[30] - s[34]) * s[32]) <= 2 ), weight=asd)
v55 = s[12]

asd = 8
sss.add_soft( And((s[3] + s[11] + v55) <= 0xC9, ((s[46] & s[3]) ^ s[20]) >= 0x50, (s[48] & s[39] & s[47]) >= 0x2B, ((s[32] | s[47]) & s[44]) < ((s[15] + s[4]) * s[9]) ), weight=asd)

asd = 3
sss.add_soft( And(((s[2] - s[10]) ^ s[53]) >= 0x96, (s[42] + s[53] + s[17]) < (s[15] & s[10] | s[0]), ((s[50] + s[15]) & s[1]) > (s[15] + s[2] - s[29]), (s[23] ^ s[53] ^ s[7]) < ((s[35] & s[8]) ^ s[43]) ), weight=asd)

v56 = s[4]
asd = 4
sss.add_soft( And(((s[4] + s[15]) * s[9]) < ((s[50] ^ s[3]) - s[19]), ((s[12] & s[23]) * s[10]) <= 0xFC, ((s[46] & s[38]) * s[21]) < (s[54] & s[6] | s[32]), (s[51] * s[29] - s[32]) < (s[50] - (s[12] + s[21])), ((s[42] & s[19]) | s[10]) > (s[14] & s[10] | s[22]), (s[33] ^ (s[29] & s[46])) <= 0x55 ), weight=asd)
v56 = s[4]

asd = 6
sss.add_soft( And(((v56 | s[46]) & s[23]) > ((s[13] ^ s[34])- s[35]), ((s[24] & s[3]) - s[9]) <= 0xDA, (s[32] ^ (v56 | s[13])) < ((s[18] * s[43]) ^ s[27]) ), weight=asd)

v57 = s[21]
asd = 8
sss.add_soft( And(((s[38] * s[51]) ^ s[50]) < ((s[48] - s[21]) ^ s[14]), ((s[5] + s[34]) ^ s[32]) >= 0xC3, ((s[44] ^ s[53]) & s[35]) >= 0x14, ((s[26] | s[35]) ^ s[14]) > ((s[49] - s[20]) * s[12]) ), weight=asd)
v57 = s[21]

v58 = s[40]
asd = 6
sss.add_soft( And((s[20] & s[40] & s[26]) > ((s[42] | s[44]) - v57), (s[18] & s[28] & s[48]) > ((s[39] ^ s[32]) - s[37]), ((s[6] | s[47]) & s[9]) >= 0x3A, (s[36] + s[53] - s[8]) < (s[38] * s[52] - s[5]), ((s[13] & s[9]) - s[32]) < ((s[41] + s[3]) * s[11]) ), weight=asd)
v58 = s[40]

asd = 4
sss.add_soft( And(((s[41] - v58) * s[16]) < ((s[22] & s[29]) - s[37]), ((s[2] + s[55]) | v58) <= 0xFC, ((s[36] ^ s[44]) + s[53]) < (s[42] + s[53] + s[17]) ), weight=asd)

asd = 1
sss.add_soft( And(((s[26] - s[30]) * s[28]) <= 0x5D, ((s[27] | s[4]) * s[26]) <= 0x63, ((s[33] - s[9]) | s[39]) <= 0x2A, ((s[35] & s[8]) ^ s[43]) < ((s[38]- s[20]) & s[23]), ((s[25] * s[4]) ^ s[18]) < (((s[7] | s[39]) ^ s[21])- 125) ), weight=asd)

asd = 9
sss.add_soft( And((s[38] + s[1] - s[9]) < ((s[53] & s[51]) * s[27]), ((s[11] + s[33]) * s[43]) >= 0x61, ((s[54] * s[33]) & s[26]) > ((s[13] ^ s[33]) - s[1]) ), weight=asd)

asd = 1
sss.add_soft( And(((s[14] * s[25]) ^ s[47]) > (s[25] * s[50] - s[37]), (s[44] ^ s[3] ^ s[32]) > (s[8] - (s[43] + s[7])), ((s[29] | s[19]) + s[26]) <= 0x6B, (s[41] + s[24] * s[45]) >= 0x2D, (s[15] + s[20] - s[1]) >= 0x93, (s[31] & s[19] & s[54]) > ((s[31] & s[6]) * s[35]) ), weight=asd)

asd = 2
sss.add_soft( And(((s[29] + s[11]) | s[6]) >= 0x7C, (s[3] + (s[40] ^ s[31]) - 37) < ((s[23] ^ s[43]) * s[26]), ((s[51] | s[3]) - s[11]) >= 0x43, ((s[24] * s[27]) | s[55]) <= 0xE1, ((s[18] | s[12]) - s[52]) < ((s[50] + s[7]) | s[29]) ), weight=asd)

v59 = s[52]
v60 = s[4]
asd = 6
sss.add_soft( And(((s[52] ^ s[20]) * s[47]) < (s[41] ^ s[4] | s[53]), ((s[38] | s[53]) * s[5]) <= 0x45, (s[38] * s[52] - s[5]) < ((s[23] | s[47]) + s[11]), ((s[49] & s[4]) ^ s[20]) <= 0x57, ((s[17] & s[50]) - s[48]) < (s[35] * s[49] * s[8]), (s[28] + s[44] - s[16]) < ((s[14] ^ s[6]) & s[36]), (s[14] ^ s[53] | s[17]) < ((s[32] + s[20]) * s[49]), ((s[12] | s[47]) & s[22]) > ((s[0] | s[53]) * s[3]) ), weight=asd)
v60 = s[4]
v59 = s[52]

v61 = s[40]
asd = 10
sss.add_soft( And(((s[40] - v59) ^ v60) <= 0x5D, (s[14] | s[11] | s[1]) < (s[27] * s[54] * s[49]), (s[16] ^ s[53] ^ s[32]) <= 0x7A, (s[41] ^ s[20] | s[46]) < ((s[11] - s[12]) * s[6]), (s[36] * s[8] - s[48]) < ((s[42] | s[36]) - s[20]), ((s[22] + s[21]) & s[43]) < ((s[15] & s[30]) - s[31]) ), weight=asd)
v61 = s[40]

v62 = s[17]
v63 = s[32]
asd = 6
sss.add_soft( And(((s[30] & s[3]) | s[32]) < ((s[16] * s[17]) ^ v61), ((s[34] | s[42]) - s[50]) >= 0x30, ((s[39] ^ s[43]) + s[47]) < ((s[5] - s[52]) * s[35]), (s[41] ^ s[30] | s[34]) > ((s[23] ^ s[20]) * s[17]) ), weight=asd)
v62 = s[17]
v63 = s[32]

asd = 7
sss.add_soft( And(((v62 * s[24]) ^ s[0]) < ((s[55] * v63) & s[42]), (s[47] - (s[44] + s[43])) <= 0xE1, ((s[33] * s[18]) | s[34]) > ((s[15] & s[24]) + s[39]) ), weight=asd)
v63 = s[32]

v64 = s[15]
asd = 10
sss.add_soft( And((v63 * s[53] - s[15]) <= 0xBF, ((s[43] ^ s[5]) * s[42]) < ((s[0] ^ s[42]) + s[50]), (s[29] ^ s[25] | s[48]) >= 0x2F, ((s[30] + s[27]) * s[36]) < ((s[46] ^ s[2]) & s[34]), ((s[47] | s[2]) ^ s[19]) < ((s[26] + s[49]) ^ s[23]) ), weight=asd)
v64 = s[15]

v65 = s[30]
asd = 9
sss.add_soft( And(((s[30] & v64) - s[31]) < (s[1] ^ s[38] | s[28]), ((s[53] + s[27]) & s[11]) >= 3, ((s[34] & s[7]) - s[49]) < ((s[46] | s[38]) + s[51]) ), weight=asd)
v65 = s[30]

asd = 7
sss.add_soft( And(((v65 ^ s[14]) * s[41]) >= 0x7F, ((s[13] ^ s[8]) & s[5]) > (s[15] - (s[54] + s[7])), ((s[19] - s[46]) & s[53]) >= 3, ((s[44] * s[26]) | s[3]) < (s[40] | s[44] | s[51]), ((s[21] * s[15]) & s[48]) >= 0x14 ), weight=asd)

asd = 8
sss.add_soft( And((s[18] + s[38] + s[42]) >= 0xEA, ((s[0] & s[53]) ^ s[4]) < ((s[52]+ s[38]) & s[53]), ((s[54] | s[53]) & s[27]) > (s[2] + s[24] + s[25]), (s[43] ^ s[48] ^ s[11]) <= 0x32, ((s[35] * s[37]) & s[1]) >= 0x3D, (s[22] + s[34] * s[4]) <= 0xE5, (s[41] ^ s[30] | s[34]) < (s[35] & (s[43] - s[24])) ), weight=asd)

v66 = s[26]
asd = 1
sss.add_soft( And(((s[26] * s[16]) | s[28]) < ((s[8] | s[34]) - s[31]), ((s[40] + s[31]) * s[50]) >= 0xE7, ((s[15] | s[12]) ^ s[44]) > ((s[37] | s[31]) - s[55]), ((s[23] - s[36]) & s[17]) <= 0x3D ), weight=asd)
v66 = s[26]

asd = 1
sss.add_soft( And((s[37] | s[3] | s[0]) > ((v66 - s[9]) * s[43]), (s[48] & s[39] & s[47]) <= 0x2A, ((s[28] & s[9]) | s[43]) > (s[25]- (s[29]+ s[2])), (s[55] + s[50] - s[15]) <= 0x4D, (s[9] - (s[40] + s[11]) - 39) < ((s[45] + s[44]) * s[17]) ), weight=asd)

v67 = s[40]
asd = 9
sss.add_soft( And((s[7] | s[40] | s[2]) <= 0x7B, ((s[33] + s[29]) ^ s[44]) > (s[55] - s[15] + s[0]), (s[41] + s[24] * s[45]) <= 0x2C ), weight=asd)
v67 = s[40]

asd = 7
sss.add_soft( And(((s[27] - s[34]) | v67) >= 0xFD, ((s[54] + s[51]) * s[52]) >= 0xCF, ((s[32] & s[31]) + s[10]) <= 0xA5, ((s[5] & s[39]) * s[15]) >= 0xE5, ((s[29] & s[10]) | s[7]) > ((s[47] ^ s[0])- s[41]), ((s[25] + s[33]) * v67) < ((s[53] ^ s[2]) - s[31]) ), weight=asd)

v68 = s[29]
asd = 3
sss.add_soft( And(((s[29] + s[20]) * s[7]) >= 0xAE, ((s[17] * s[15]) | s[48]) < (s[28] + s[32] + s[11]), ((s[25] ^ s[0]) & s[40]) >= 0x68, ((s[30] + s[28]) & s[36]) >= 3 ), weight=asd)
v68 = s[29]

v69 = s[5]
asd = 5
sss.add_soft( And((s[16] + s[5] + s[48]) < ((s[11] + s[24]) * v68), (s[17] & s[27] ^ s[53]) >= 3, ((s[3] * s[53]) ^ s[49]) >= 0xFD, ((s[51] ^ s[12]) * s[26]) >= 3, ((s[39] & s[5]) * s[15]) <= 0xE4 ), weight=asd)
v69 = s[5]

v70 = s[1]
asd = 1
sss.add_soft( And(((s[14] | s[1]) + v69) >= 0xA9, (s[52] ^ s[31] | s[27]) <= 0x5D ), weight=asd)
v70 = s[1]

asd = 7
sss.add_soft( And(((s[32] - s[37]) ^ s[10]) < ((s[26] | v70) & s[41]), (s[18] | s[32] | s[42]) <= 0x35, ((s[23] & s[42]) | s[24]) <= 0x2F ), weight=asd)

asd = 4
sss.add_soft( And((s[29] + s[31] * s[52]) >= 0x79, (s[37] + s[21] + s[3]) <= 0xBC, ((s[53] + s[44]) * s[22]) <= 0xCC ), weight=asd)

asd = 7
sss.add_soft( And(((s[1] ^ s[19]) & s[46]) >= 0x2A, (s[50] - (s[42] + s[24])) >= 0xD2, (s[3] | s[1] | s[17]) < ((s[24] - s[38]) * s[17]) ), weight=asd)

asd = 10
sss.add_soft( And(((s[47] & s[44]) ^ s[40]) <= 0x67 ), weight=asd)

asd = 7
sss.add_soft( And(((s[23] ^ s[20]) & s[42]) <= 0x10, ((s[2] + s[22]) ^ s[20]) < (s[37] ^ s[20] | s[25]), ((s[34] + s[39]) & s[45]) <= 0xB, (s[0] ^ s[21] ^ s[53]) <= 4 ), weight=asd)

asd = 2
sss.add_soft( And(((s[36] * s[53]) | s[46]) > (s[48] * s[40] * s[49]), (s[22] & s[18] & s[52]) >= 0x24, ((s[14] | s[45]) ^ s[22]) >= 0x18, ((s[20] + s[51]) & s[55]) > ((s[37] - s[8]) * s[43]), (s[22] & s[18] & s[12]) >= 0x1B ), weight=asd)

asd = 2
sss.add_soft( And(((s[7] | s[25]) * s[51]) <= 0xE, ((s[16] ^ s[51]) + s[49]) < ((s[30] * s[5]) | s[16]), (s[12] * s[51] * s[39]) < ((s[47] | s[49]) + s[37]) ), weight=asd)

v71 = s[44]
asd = 4
sss.add_soft( And(((s[47] | s[32]) & s[44]) > ((s[3] ^ s[50]) - s[19]), (s[0] & s[23] ^ s[37]) <= 0x6D, ((s[53] * s[3]) & s[19]) > ((s[42] & s[23]) - s[38]) ), weight=asd)
v71 = s[44]

asd = 2
sss.add_soft( And((s[24] * s[23] * s[4]) < ((s[33] - s[35]) * v71), (s[33] + s[34] * s[5]) <= 0x1B, ((s[26] + s[3]) * s[1]) < ((s[47] + s[43]) * v71) ), weight=asd)

asd = 8
sss.add_soft( And((s[43] - s[53] + s[48]) >= 0xA, ((s[19] - s[23]) ^ s[10]) < ((s[41] | s[32]) + s[15]), ((s[4] | s[32]) & s[2]) < ((s[20] + s[51]) ^ s[45]), (s[54] * s[32] - s[48]) < (s[21] + s[41] - s[13]), (s[33] ^ s[1] | s[55]) <= 0x82, ((s[38] | s[47]) & s[9]) < (s[0] ^ s[23] | s[17]), ((s[39] & s[17]) | s[11]) < ((s[18] & s[20]) | s[37]), (s[29] + s[52] * s[31]) <= 0x78 ), weight=asd)

asd = 5
sss.add_soft( And((s[41] ^ s[3] ^ s[13]) <= 0x35, ((s[48] | s[33]) + s[3]) <= 0x9C, ((s[31] ^ s[38]) - s[12]) >= 0x23, ((s[28] | s[26]) - s[38]) >= 0xF4 ), weight=asd)

asd = 10
sss.add_soft( And(((s[26] | s[15]) * s[6]) <= 0xE7 , (s[8] + s[16] + s[35]) >= 0x74 ), weight=asd)

v72 = s[11]
asd = 1
sss.add_soft( And((s[7] + s[18] - s[11]) <= 0x51, ((s[31] - s[37]) * s[13]) <= 0x6B, ((s[48] * s[47]) | s[6]) < (s[5] & s[43] & s[20]), ((s[15] - s[3]) | s[9]) > ((s[23] + s[20])* s[34]) ), weight=asd)
v72 = s[11]

asd = 2
sss.add_soft( And(((s[16] - s[9]) & s[10]) > (s[34] + v72 - s[28]), ((s[36] | s[52]) * s[9]) < ((s[45] & s[51]) + s[49]), ((s[39] - s[55]) & s[36]) >= 0x22, (s[15] | (s[52] * s[28])) > ((s[12] | s[23]) + s[10]), ((s[17] | s[34]) * s[24]) <= 0xD4 ), weight=asd)
v72 = s[11]

asd = 9
sss.add_soft( And((s[50] + s[53] - s[51]) < ((s[39] + s[23]) * v72), ((s[3] ^ s[9]) - s[51]) >= 0x37, (s[28] | s[9] & s[53]) >= 0x2D, ((s[44] + s[4]) ^ s[40]) > ((s[35] & s[42])+ s[7]) ), weight=asd)

asd = 2
sss.add_soft( And(((s[5] + s[18]) * s[16]) < ((s[44] & s[4]) + s[2]), ((s[33] | s[21]) & s[47]) >= 0x26, (s[54] & s[28] & s[51]) < ((s[40] | s[46]) & s[7]) ), weight=asd)

asd = 5
sss.add_soft( And(((s[0] - s[14]) * s[9]) <= 0xBA, ((s[29] - s[43]) & s[3]) < ((s[4] ^ s[3]) - s[0]), ((s[24] ^ s[4]) & s[26]) < ((s[16] * s[18]) ^ s[23]), ((s[34] | s[17]) * s[24]) >= 0xD5 ), weight=asd)

v73 = s[36]
asd = 1
sss.add_soft( And(((s[28] | s[17]) & s[20]) < ((s[33] + s[44]) | s[36]), ((s[39] ^ s[0]) * s[40]) >= 0x95 ), weight=asd)
v73 = s[36]

asd = 4
sss.add_soft( And(((s[49] * s[11]) | v73) < ((s[18] & s[2]) + s[11]), ((s[31] | s[20]) + s[52]) <= 0x8E, ((s[14] | s[38]) & s[49]) > (s[32] + s[3] + s[53]) ), weight=asd)

asd = 5
sss.add_soft( And(((s[29] & s[28]) * s[16]) >= 0x30, ((s[39] + s[53]) | s[32]) < ((s[50] | s[6]) * s[55]), ((s[41] ^ s[5]) * s[16]) <= 0x49, ((s[26] ^ s[3]) & s[17]) <= 0x5C ), weight=asd)

v74 = s[36]
asd = 9
sss.add_soft( And(((s[36] | s[46]) & s[6]) >= 0x52, ((s[33] | s[3]) ^ s[31]) < ((s[1] * s[10]) ^ s[31]), ((s[13] + s[11]) ^ s[51]) <= 0x63, ((s[36] - s[29]) | s[4]) < ((s[40] + s[24]) ^ s[55]), ((s[5] | s[11]) ^ s[6]) >= 0x43 ), weight=asd)
v74 = s[36]

asd = 4
sss.add_soft( And((s[20] & s[18] | s[37]) < (s[49] + v74 - s[14]), ((s[3] | s[51]) + s[11]) < (s[21] * s[51] * s[50]), ((s[47] & s[6]) * s[7]) >= 0x9A, ((s[24] - s[4]) & s[0]) >= 0x11, ((s[19] & s[24]) * s[53]) < (s[25] & s[53] | s[27]), (s[53] ^ s[20] ^ s[25]) >= 0x39, ((s[31] | s[30]) & s[49]) >= 0x34 ), weight=asd)

asd = 6
sss.add_soft( And(((s[4] | s[32]) & s[2]) > ((s[28] | s[6]) - s[16]), ((s[23] & s[8]) * s[2]) >= 0x97, (s[33] * s[51] * s[37]) <= 0x7C ), weight=asd)

asd = 9
sss.add_soft( And(((s[49] + s[39]) | s[8]) >= 0x6E, ((s[2] | s[39]) & s[13]) <= 0x3D, (s[46] + s[25] - s[32]) >= 0x2C, ((s[34] ^ s[25]) & s[27]) < ((s[50] & s[16]) - s[38]), ((s[22] | s[42]) * s[8]) < (s[40] * s[49] * s[48]), ((s[44] | s[9]) * s[38]) < ((s[10] & s[31]) - s[29]) ), weight=asd)

v75 = s[20]
asd = 1
sss.add_soft( And(((s[54] + s[20]) | s[27]) < ((s[44] ^ s[54]) * s[22]), (s[34] & s[29] | s[51]) <= 0x29, ((s[30] * s[27]) | s[35]) < (s[38] + s[27] + s[4]), ((s[48] ^ s[30]) * s[38]) <= 0x3C, (s[48] | s[34] | s[47]) < (s[7] & s[30] & s[21]), (s[0] + s[25] + s[55]) <= 2, (s[19] + s[15] * s[7]) <= 0x15 ), weight=asd)
v75 = s[20]

v76 = s[4]
asd = 6
sss.add_soft( And(((s[4] | s[32]) & s[41]) > ((s[9] ^ s[39]) + v75), (s[24] ^ s[32] ^ s[51]) < (s[33] & s[24] & s[30]), ((s[10] + s[22]) & s[11]) > ((s[27] + s[26]) * s[51]), ((s[53] & s[24]) | s[41]) < (((s[40] + s[7]) & s[51]) + 52), ((s[34] + s[45]) * s[40]) >= 0x6A, ((s[28] & s[10]) + s[13]) <= 0x56, ((s[47] ^ s[53]) + s[34]) >= 0xC6 ), weight=asd)
v76 = s[4]

v77 = s[52]
asd = 3
sss.add_soft( And(((v76 + s[47]) & s[52]) >= 0x24, ((s[44] + v76) ^ s[40]) < (s[17] + s[47] + s[27]) ), weight=asd)
v77 = s[52]

asd = 8
sss.add_soft( And(((v77 | s[37]) ^ s[16]) > (s[45] + s[19] - s[48]), ((s[54] + s[45]) | s[40]) >= 0x52, ((s[44] + s[53]) * s[28]) < (s[35] + s[44] + s[38]) ), weight=asd)

v78 = s[13]
asd = 2
sss.add_soft( And(((s[0] - s[6]) & s[13]) >= 0x23, ((s[48] & s[39]) | s[3]) >= 0x6A ), weight=asd)
v78 = s[13]

asd = 1
sss.add_soft( And(((s[42] & v78) ^ s[24]) >= 5, ((s[16] + s[48]) | s[6]) < (s[11] + s[32] - s[19]), ((s[28] & s[16]) - s[40]) <= 0xB2, ((s[28] - s[6]) & s[37]) <= 0x42, ((s[33] - v78) ^ s[51]) >= 0x1E ), weight=asd)

asd = 9
sss.add_soft( And(((s[55] ^ s[27]) & s[22]) <= 2, (s[46] + s[38] - s[28]) >= 0x67, ((s[49] | s[32]) ^ s[36]) < ((s[27] - s[6]) ^ s[23]) ), weight=asd)

asd = 3
sss.add_soft( And(((s[54] * s[51]) ^ s[2]) >= 0x11, ((s[55] ^ s[33]) * s[19]) <= 2, ((s[45] & s[11]) + s[42]) >= 0x71, (s[4] + s[7] * s[54]) >= 0x39 ), weight=asd)

asd = 2
sss.add_soft( And((s[29] + s[23] - s[4]) >= 0xEA , ((s[25] & s[42]) * s[15]) >= 0xCB ), weight=asd)
v79 = s[49]
v80 = s[14]
v81 = s[0]
asd = 1
sss.add_soft( And((s[14] * s[49] * s[48]) < ((s[31] ^ s[0]) - s[15]), ((s[12] & s[8]) - s[35]) < ((s[41] + s[26]) * s[32]), ((s[52] * s[39]) & s[53]) >= 0x21, ((s[55] * s[32]) & s[42]) < (s[21] * s[11] * s[44]) ), weight=asd)
v81 = s[0]
v80 = s[14]
v79 = s[49]

v82 = s[27]
asd = 6
sss.add_soft( And(((s[12] + s[27]) ^ s[36]) < (v80 * v81 - v79), ((s[44] + s[33]) | s[36]) < (s[54] * (s[44] ^ v81)), ((s[42] + s[48]) ^ s[30]) <= 5, ((s[29] - s[43]) & s[3]) > ((s[8] + s[34]) | v80), ((s[2] ^ s[32]) & s[4]) < ((s[39]+ s[6]) & s[53]) ), weight=asd)
v82 = s[27]

asd = 9
sss.add_soft( And(((s[26] | s[1]) & s[41]) < (v82 + s[20] - s[2]), ((s[24] & s[54]) | s[10]) <= 0x8E, ((s[7] ^ s[34]) + s[48]) < (s[8] - (s[7] + s[43])), ((s[15] & s[14]) * s[35]) < ((s[39] | s[48]) + s[2]), ((s[31] & s[45]) | s[52]) >= 0x2C ), weight=asd)

v83 = s[21]
asd = 5
sss.add_soft( And(((s[21] & s[29]) ^ s[51]) > ((s[23] & s[51]) * s[37]), ((s[54] + s[51]) * s[52]) <= 0xCE, ((s[38] & s[43]) ^ s[19]) <= 0x11, ((s[22] ^ s[53]) * s[24]) <= 0x98, ((s[47] ^ s[53]) + s[34]) <= 0xC5 ), weight=asd)
v83 = s[21]

asd = 6
sss.add_soft( And(((s[27] | s[44]) ^ v83) <= 0x3A, ((s[22] - s[18]) & s[51]) > ((s[45] & s[33]) - s[10]), ((s[55] & s[20]) * s[37]) <= 0x3B, ((s[14] * s[52]) ^ s[12]) >= 0x8F, ((s[49] | s[29]) - s[31]) <= 4, ((s[4] | s[17]) ^ s[41]) > (s[37] + s[51] - s[35]) ), weight=asd)

asd = 2
sss.add_soft( And(((s[5] ^ s[23]) + s[10]) >= 0x59, ((s[46] - s[3]) & s[33]) < (s[34] + s[21] + s[48]), ((s[24] + s[45]) & s[36]) < ((s[13] & s[9]) - s[32]) ), weight=asd)

v84 = s[0]
asd = 3
sss.add_soft( And(((s[31] ^ s[0]) - s[15]) < (s[20] + s[40] * s[51]), ((s[9] & s[32]) + s[39]) <= 0x6E ), weight=asd)
v84 = s[0]

asd = 1
sss.add_soft( And(((s[12] - v84) ^ s[32]) < ((s[44] + s[53])* s[28]), (s[9] | s[19] | s[41]) <= 0x3C, (s[35] ^ s[29] ^ s[21]) >= 0x3C, (s[42] & s[17] & s[33]) < ((s[43] - s[39]) & s[54]) ), weight=asd)

asd = 7
sss.add_soft( And((s[24] * s[15] * s[30]) < (s[37] - s[35] + s[51]), ((s[53] & s[25]) - s[40]) <= 0xB7, ((s[1] | s[6]) * s[31]) >= 0x4F, ((s[33] ^ s[0]) + s[35]) < ((s[44] ^ s[55]) & s[33]) ), weight=asd)

asd = 6
sss.add_soft( And(((s[16] * s[18]) ^ s[23]) < ((s[22] * s[52]) ^ s[14]), ((s[26] * s[51]) ^ s[49]) <= 0x77 ), weight=asd)

asd = 4
sss.add_soft( And((s[12] + s[40] * s[26]) >= 0x15, ((s[19] * s[2]) & s[31]) < (s[22] | s[6] | s[52]), (s[10] ^ s[26] ^ s[5]) < ((s[27] * s[44]) | s[40]) ), weight=asd)

asd = 3
sss.add_soft( And(((s[37] * s[55]) & s[24]) > (s[2] - s[44] + s[20]), ((s[50] & s[6]) ^ s[8]) <= 0x16, (s[48] + s[21] + s[34]) < ((s[45] + s[44]) ^ s[55]) ), weight=asd)

asd = 10
sss.add_soft( And((s[31] ^ s[26] ^ s[48]) >= 0x38, ((s[7] | s[4]) & s[20]) <= 0x69, (s[17] ^ s[12] | s[46]) >= 0x66, ((s[16] | s[54]) - s[17]) >= 0xCF, ((s[43] & s[15]) ^ s[50]) < (s[39] | (s[16] & s[31])), ((s[34] & s[6]) ^ s[4]) >= 0x18 ), weight=asd)

asd = 2
sss.add_soft( And(((s[10] - s[9]) ^ s[13]) < ((s[28] ^ s[54])* s[20]), ((s[40] ^ s[38]) - s[41]) >= 0xA0, ((s[1] ^ s[46]) & s[7]) < (s[51] + s[27] + s[29]) ), weight=asd)

v85 = s[39]
asd = 10
sss.add_soft( And((s[35] + s[39] + s[30]) >= 0xAE, ((s[34] + s[14]) ^ s[8]) > ((s[1] & s[36])+ s[42]), ((s[32] - s[20]) ^ s[29]) > ((s[4] ^ s[55]) + s[9]), ((s[44] ^ s[55]) & s[33]) < ((s[17] * s[46]) ^ s[32]), (s[38] + s[9] + s[50]) >= 0xBE, ((s[24] + s[5]) & s[16]) < (s[26] | s[14] | s[31]), (s[9] | (s[36] * s[39])) >= 0xC3, ((s[15] + s[20]) & s[28]) < (s[17] * s[20] * s[48]) ), weight=asd)
v85 = s[39]

asd = 4
sss.add_soft( And(((s[19] | v85) - s[29]) < ((s[51] & s[23]) * s[37]), (s[47] ^ s[52] | s[14]) < ((s[20] + s[28]) ^ s[40]), ((s[33] * v85) & s[19]) < (s[0] + s[51] - s[9]), (s[18] & s[19] & s[32]) <= 0x3D, ((s[10] | s[20]) ^ s[46]) <= 0x58 ), weight=asd)

v86 = s[36]
asd = 1
sss.add_soft( And(((s[36] | s[6]) & s[46]) < ((s[41] ^ s[36]) + s[52]), ((s[8] + s[14]) * s[36]) <= 0x1E, ((s[42] - s[51]) ^ s[13]) > ((s[50] & s[8]) * s[46]) ), weight=asd)
v86 = s[36]

v87 = s[30]
asd = 10
sss.add_soft( And((s[30] ^ s[21] ^ v86) >= 0x3B, ((s[10] * s[1]) ^ s[31]) < (s[31] + s[21] - s[47]), ((s[25] * s[34]) | s[33]) < ((s[28] ^ s[1]) & s[20]), ((s[30] - s[28]) ^ s[26]) <= 0x12, ((s[51] * s[25]) ^ s[34]) < (s[34] - s[28] + s[11]), ((s[2] + s[11]) ^ s[4]) < ((s[51] | s[20]) ^ s[31]) ), weight=asd)
v87 = s[30]

v88 = s[38]
asd = 6
sss.add_soft( And((s[48] + v87 - s[35]) < ((s[44] | s[9]) * s[38]), ((s[52] | s[25]) ^ s[40]) >= 0x49, (s[49] * s[38] * s[20]) <= 0x52, ((s[13] - s[7]) ^ s[28]) < (s[43] + s[33] * s[27]) ), weight=asd)
v88 = s[38]

v89 = s[45]
asd = 2
sss.add_soft( And((s[2] + s[51] + v88) < ((s[8] - s[45]) | s[31]), ((s[9] & s[16]) ^ s[31]) > (s[27] * s[49] * s[54]), ((s[29] & s[22]) - s[37]) < (s[3] + s[24] * s[6]), ((s[44] ^ s[27]) * s[33]) <= 0x2F, ((s[47] + s[8]) ^ s[28]) < ((s[36] | s[21]) & s[54]), ((s[52] & s[3]) | s[8]) < ((s[40] ^ s[37]) & s[26]) ), weight=asd)
v89 = s[45]

asd = 5
sss.add_soft( And(((v89 + s[24]) & s[36]) > ((s[3] + s[41]) * s[11]), ((s[25] + s[52]) | s[0]) > ((s[43] ^ s[13])+ s[7]), ((s[17] | s[4]) & s[23]) < ((s[35] | s[53]) - s[21]), (s[53] & (s[4] ^ s[11])) <= 0x45 ), weight=asd)

v90 = s[52]
v91 = s[16]
asd = 5
sss.add_soft( And(((s[52] | s[37]) ^ s[16]) < ((s[35] | s[13]) + s[20]), ((s[15] * s[11]) & s[32]) <= 0x17 ), weight=asd)
v91 = s[16]
v90 = s[52]

asd = 5
sss.add_soft( And(((s[11] - s[15]) * v91) < ((v90 | s[23]) * s[12]), ((s[24] & s[21]) + s[15]) <= 0x7C, ((s[17] ^ s[4]) * s[10]) <= 0x4C, (s[30] - (s[41] + s[43])) < ((s[33] ^ s[10]) * s[25]) ), weight=asd)

asd = 9
sss.add_soft( And(((s[22] | s[35]) + s[43]) >= 0x7D, (s[13] + s[22] - s[33]) >= 0x2F, ((s[44] - s[33]) ^ s[36]) < ((s[19] * s[33]) | s[38]), (s[9] * s[31] * s[2]) < ((s[48] | s[34]) * s[18]) ), weight=asd)

asd = 4
sss.add_soft( And((s[39] - (s[9] + s[11])) >= 0xE7, (s[45] * s[52] - s[22]) >= 0xA5, ((s[33] + s[29]) ^ s[44]) < ((s[36] ^ s[40]) + s[21]) ), weight=asd)

asd = 3
sss.add_soft( And(((s[50] + s[15]) & s[1]) < (s[43] | s[48] | s[49]), (s[20] - s[15] + s[6]) >= 0x4B, ((s[38] - s[20]) & s[23]) < (s[53] ^ s[23] ^ s[7]) ), weight=asd)

asd = 3
sss.add_soft( And(((s[18] ^ s[46]) - s[12]) <= 0xE8 ), weight=asd)

asd = 8
sss.add_soft( And(((s[28] - s[34]) ^ s[7]) < ((s[11] - s[15])* s[16]), (s[40] + s[32] * s[42]) <= 0x24, ((s[9] * s[10]) & s[35]) <= 0x22, (s[50] | s[46] | s[37]) <= 0x86, (s[23] ^ s[13] ^ s[55]) < ((s[54] | s[46]) * s[11]), ((s[20] ^ s[46]) * s[44]) < ((s[26] ^ s[32]) * s[27]) ), weight=asd)

v92 = s[52]
asd = 1
sss.add_soft( And(((s[31] | s[12]) ^ s[52]) < ((s[37] ^ s[52]) - s[30]), ((s[33] + s[18]) ^ s[44]) <= 0xA8, ((s[51] & s[45]) + s[49]) < ((s[27] + s[51]) * s[23]), (s[53] | s[45] | s[47]) < ((s[28] | s[4]) + s[14]) ), weight=asd)
v92 = s[52]

v93 = v92 + s[46]
v94 = s[41]
asd = 7
sss.add_soft( And((v93 * s[13]) < (s[41] * s[44] - s[43]), ((s[42] - s[6]) | s[38]) >= 0xC1 ), weight=asd)
v94 = s[41]

asd = 6
sss.add_soft( And((v94 ^ s[4] | s[53]) < ((s[55] & s[3]) * s[54]), (s[24] + s[6] + s[46]) < (s[11] ^ s[49] | s[6]), ((s[44] & s[24]) + s[33]) <= 0x90, ((s[51] & s[24]) + s[40]) >= 0x8A, ((s[45] - s[15]) * s[9]) >= 0xDA, ((s[5] | s[54]) ^ s[7]) <= 0x59, ((s[27] * s[30]) | s[35]) > (s[17] - (s[40] + s[12])), ((s[22] | s[6]) * s[44]) <= 0x16 ), weight=asd)

asd = 6
sss.add_soft( And((s[35] + s[39] + s[30]) <= 0xAD, ((s[18] + s[30]) | s[12]) >= 0xE9, ((s[29] - s[36]) ^ s[41]) >= 0xFD, ((s[43] + s[44]) ^ s[9]) < (s[6] & s[36] & s[24]), ((s[0] ^ s[44]) * s[54]) < ((s[17] | s[28]) & s[20]), ((s[4] | s[28]) + s[14]) < (s[50] + s[40] * s[29]) ), weight=asd)

asd = 7
sss.add_soft( And((s[21] + s[10] - s[45]) < (s[36] * s[20] * s[19]), ((s[31] + s[20]) & s[8]) <= 0x18, ((s[16] & s[31]) | s[39]) < (s[51] + s[27] * s[50]), (s[47] * s[1] * s[4]) >= 0xB4, ((s[28] | s[48]) * s[31]) >= 0x3D, ((s[14] | s[1]) + s[5]) <= 0xA8 ), weight=asd)

asd = 9
sss.add_soft( And((s[30] + s[32] - s[25]) >= 0x61, ((s[10] + s[25]) & s[26]) < ((s[23] & s[28]) + s[7]), (s[37] * s[2] - s[43]) >= 0xC8, ((s[20] | s[10]) ^ s[31]) <= 0x60, ((s[52] & s[32]) - s[40]) < ((s[31] | s[37]) - s[55]), ((s[49] | s[29]) - s[31]) >= 5 ), weight=asd)

asd = 6
sss.add_soft( And(((s[31] ^ s[22]) & s[49]) <= 0xB, ((s[50] - s[28]) | s[4]) < (s[39]- (s[2]+ s[17])), (((s[42] - s[32]) & s[39]) + 65) < (s[3] + (s[40] ^ s[31]) - 37), ((s[7] + s[41]) ^ s[27]) <= 0xD6, ((s[36] & s[50]) * s[12]) >= 0x86, ((s[0] - s[6]) & s[13]) <= 0x22 ), weight=asd)

v95 = s[34]
asd = 5
sss.add_soft( And((s[25] & s[37] & s[34]) < ((s[38] ^ s[39]) * s[32]), ((s[42] * s[9]) | s[4]) <= 0xFC, ((s[21] + s[4]) & s[44]) >= 0x32, ((s[8] + s[55]) * s[51]) <= 0x48, ((s[1] & s[5]) - s[41]) <= 0xAD, (s[47] | s[32] | s[7]) < ((s[3]- s[34]) & s[11]) ), weight=asd)
v95 = s[34]

v96 = s[18]
asd = 4
sss.add_soft( And(((s[49] * v95) & s[46]) > ((s[18] * s[33]) | v95), ((s[42] - s[10]) | s[55]) <= 0xF2, ((s[35] + s[4]) * s[7]) <= 0xCA ), weight=asd)
v96 = s[18]

asd = 9
sss.add_soft( And(((s[27] - v96) | s[5]) > ((s[24] + s[11]) * s[29]), (s[51] ^ s[47] ^ s[0]) >= 0x5B, (s[40] | s[51] | s[44]) < ((s[52] + s[53]) | s[7]), ((s[54] * s[47]) & s[11]) >= 3, (s[3] + s[26] + s[1]) <= 0xDE, (s[28] | s[7] | s[9]) > (s[54] - (s[10] + s[15])) ), weight=asd)

asd = 5
sss.add_soft( And((s[9] & s[36] & s[46]) > ((s[53] ^ s[49]) * s[30]), (s[0] - (s[53] + s[2])) < (s[3] * (s[0] | s[53])), ((s[51] - s[24]) * s[27]) < ((s[43] ^ s[5]) * s[42]), ((s[32] ^ s[4]) - s[50]) <= 0x10, ((s[18] * s[8]) | s[46]) <= 0xBF, ((s[33] + s[29]) * s[21]) < ((s[38] & s[46]) * s[21]), ((s[25] | s[37]) - s[11]) <= 0x42, (s[24] - (s[2] + s[5]) + 115) < (s[0] * s[53] * s[37]), ((s[13] + s[36]) & s[30]) >= 3 ), weight=asd)

asd = 8
sss.add_soft( And(((s[26] | s[48]) & s[29]) >= 0x2E, (s[52] + s[0] - s[15]) < (s[20] - (s[7] + s[28])), ((s[25] + s[48]) * s[30]) < ((s[45] ^ s[17]) + s[7]), ((s[47] | s[48]) + s[41]) <= 0x82, ((s[47] - s[48]) & s[10]) < ((s[2] * s[19]) & s[31]), (s[2] - s[37] + s[42]) >= 0x19 ), weight=asd)

asd = 9
sss.add_soft( And((s[47] & s[19] | s[52]) >= 0x39, ((s[26] + s[19]) ^ s[0]) >= 0x34 ), weight=asd)

v97 = s[51]
asd = 4
sss.add_soft( And((s[55] - (s[30] + s[7])) < ((s[40] + s[38]) | s[51]), ((s[54] | s[18]) ^ s[25]) <= 2, (s[41] ^ s[10] | s[54]) < ((s[32] ^ s[5]) - s[24]), ((s[29] ^ s[15]) * s[31]) < (s[35] ^ s[29] ^ s[22]) ), weight=asd)
v97 = s[51]

v98 = s[1]
asd = 5
sss.add_soft( And(((s[27] & s[1]) + v97) < (s[14] + s[22] - s[28]), ((s[36] | s[5]) ^ s[17]) <= 0x17, (s[6] & s[36] & s[24]) < ((s[19] | s[36]) - s[32]), (s[13] ^ s[55] | s[15]) >= 0x64 ), weight=asd)
v98 = s[1]

v99 = s[40]
asd = 8
sss.add_soft( And(((s[49] & s[43]) + s[17]) < ((s[37] & v98) * s[40]), ((s[35] & s[16]) ^ s[33]) <= 0x56 ), weight=asd)
v99 = s[40]

v100 = s[7]
v101 = s[34]
asd = 1
sss.add_soft( And(((s[31] + s[7]) & s[34]) > ((s[12] & s[6]) * v99), ((s[20] * s[0]) | s[52]) < ((s[45]* s[39]) & s[34]), (s[55] | s[34] | s[53]) <= 0x7E, ((s[30] & s[31]) | s[4]) > ((s[2] - s[25]) | s[17]), (s[49] + s[5] * s[12]) >= 0x34, ((s[16] | s[23]) ^ s[22]) < (s[33] & s[17] & s[42]) ), weight=asd)
v100 = s[7]
v101 = s[34]

asd = 6
sss.add_soft( And((s[10] ^ s[18] ^ s[3]) < ((v101 & v100) - s[49]), ((s[15] | s[37]) ^ s[45]) > (s[47] + s[18] - s[32]), ((s[8] + s[48]) | s[14]) >= 0x73, ((s[14] - s[10]) & s[44]) >= 0x34 ), weight=asd)

asd = 2
sss.add_soft( And(((s[5] | s[11]) ^ s[6]) <= 0x42, (s[51] ^ s[27] ^ s[32]) <= 0x6C, ((s[45] + s[34]) ^ s[52]) >= 0xCC, (s[1] - (s[30] + s[29])) >= 0x92 ), weight=asd)

v102 = s[18]
asd = 3
sss.add_soft( And(((s[18] - s[16]) ^ s[54]) <= 0x2C, ((s[48] + s[51]) * s[49]) >= 0x32, ((s[53] + s[9]) * s[46]) <= 0xAE, (s[37] & s[27] | s[55]) >= 0x90, (s[34] * s[4] * s[50]) < ((s[13] ^ s[34]) - s[35]), ((s[36] + s[55]) * s[22]) <= 0x1D ), weight=asd)
v102 = s[18]

asd = 4
sss.add_soft( And((v102 - (s[22] + s[28])) >= 0x83, (s[43] + s[27] * s[33]) < ((s[35] | s[12]) - s[46]), ((s[19] * s[5]) & s[12]) <= 0x3A ), weight=asd)

asd = 9
sss.add_soft( And(((s[23] - s[36]) & s[17]) >= 0x3E, ((s[49] * s[34]) & s[46]) < ((s[24] & s[15]) + s[39]), ((s[2] * s[15]) & s[35]) <= 0x13, (s[12] ^ s[35] | s[55]) > (s[54] - s[34] + s[38]), (s[29] | s[45] | s[27]) <= 0x7E ), weight=asd)

asd = 9
sss.add_soft( And(((s[39] ^ s[12]) & s[52]) < ((s[16] & s[42]) * s[3]), ((s[45] & s[32]) + s[42]) < ((s[50] & s[11]) + s[26]), (s[8] ^ s[4] ^ s[35]) >= 0x5A, (s[7] * (s[35] + s[4])) >= 0xCB, ((s[28] * s[8]) & s[55]) < (s[7] | s[32] | s[47]) ), weight=asd)

v103 = s[11]
asd = 1
sss.add_soft( And(((s[22] - s[43]) ^ s[11]) >= 0x1E, ((s[55] ^ s[54]) - s[4]) <= 0xB3, ((s[10] ^ s[54]) - s[16]) >= 0x22, ((s[44] ^ s[28]) & s[43]) > ((s[31] & s[15]) + s[9]), ((s[24] * s[27]) ^ s[49]) > ((s[42] ^ s[41]) - s[48]), ((s[3] & s[52]) | s[8]) > ((s[13] | s[4]) + s[38]) ), weight=asd)
v103 = s[11]

asd = 3
sss.add_soft( And((s[23] & v103 & s[19]) <= 0x25 , (s[47] * s[55] - s[5]) <= 0x84 ), weight=asd)

v104 = s[45]
asd = 1
sss.add_soft( And(((s[45] + s[44]) * s[17]) < (((s[16] | s[18]) & s[4]) + 66), (s[30] - (s[50] + s[9])) < (s[39] - s[8] + s[48]), ((s[7] + s[37]) * s[45]) >= 0x94, (s[4] - s[45] + s[52]) >= 0x92, (s[50] - (s[42] + s[24])) <= 0xD1, (s[0] * s[37] * s[53]) < (s[11] + s[26] - s[38] + 26), (s[21] * s[50] - s[39]) >= 9, ((s[47] | s[5]) ^ s[42]) > ((s[12] | s[38]) + s[9]) ), weight=asd)
v104 = s[45]

asd = 1
sss.add_soft( And((v104 ^ s[52] ^ s[1]) >= 0x55, (s[3] ^ s[10] ^ s[18]) > ((s[38] | s[46]) + s[51]), (s[9] * s[26] * s[50] + 65) < (((s[11] * s[16]) | s[34]) + 77) ), weight=asd)

asd = 1
sss.add_soft( And((s[39] + s[16] * s[40]) >= 0xF2, ((s[35] - s[21]) | s[6]) < ((s[48]+ s[23]) & s[33]) ), weight=asd)

asd = 10
sss.add_soft( And(((s[31] & s[3]) | s[53]) >= 0x59, ((s[18] + s[30]) * s[5]) < (s[35] + s[29] + s[55]), (s[36] | (s[5] * s[31])) >= 0xCD, (s[13] - s[37] + s[19]) < (s[10] + s[50] - s[26]), (s[47] ^ s[50] | s[53]) < ((s[41] ^ s[25]) - s[45]), ((s[52] * s[34]) | s[33]) >= 0x5A ), weight=asd)

v105 = s[13]
asd = 10
sss.add_soft( And(((s[47] | s[10]) ^ s[40]) < ((s[28] - s[13]) ^ s[42]), ((s[34] | s[51]) + s[31]) <= 0xD0, ((s[10] - s[46]) | s[44]) < (s[16] ^ s[50] ^ s[38]), (s[15] | (s[16] & s[42])) <= 0x8D, ((s[27] ^ s[46]) & s[9]) < ((s[52] ^ s[8]) + s[13]) ), weight=asd)
v105 = s[13]

asd = 5
sss.add_soft( And(((s[51] ^ s[34]) - s[50]) < ((v105 ^ s[50]) + s[51]), ((s[30] + s[40]) * s[18]) <= 0x37, (s[9] & s[52] ^ s[28]) < ((s[55] ^ s[4]) + s[9]) ), weight=asd)

asd = 5
sss.add_soft( And(((s[49] + s[48]) | s[44]) < ((s[26] - s[8]) ^ s[23]), (s[5] | s[4] | s[39]) >= 0x61, ((s[35] | s[21]) ^ s[37]) < ((s[41] & s[15]) + s[1]), ((s[14] & s[39]) | s[16]) < (s[32] + s[3] + s[53]) ), weight=asd)

v106 = s[7]
asd = 1
sss.add_soft( And((s[4] ^ s[50] | s[7]) <= 0x52, (s[20] | s[19] | s[41]) <= 0x6B ), weight=asd)
v106 = s[7]

v107 = s[10]
asd = 6
sss.add_soft( And((v106 ^ s[17] | s[24]) < (s[46] + s[24] - s[10]), ((s[22] + s[19]) & s[24]) <= 0xE, ((s[53] * s[3]) ^ s[49]) <= 0xFC, ((s[26] - s[30]) * s[28]) >= 0x5E, ((s[19] - s[32]) & s[28]) >= 3, ((s[25] ^ s[40]) * s[16]) <= 0x33, (s[31] - s[46] + s[21]) >= 0x43 ), weight=asd)
v107 = s[10]

asd = 5
sss.add_soft( And(((v107 & s[28]) + s[13]) >= 0x57, (s[25] - s[30] + s[38]) >= 0x2D, ((s[3] | s[51]) - s[11]) <= 0x42, ((s[35] + s[11]) | s[34]) < ((s[19] | s[40]) * s[31]) ), weight=asd)

asd = 5
sss.add_soft( And(((s[51] * s[11]) ^ s[2]) >= 0xFD, ((s[44] - s[42]) | s[29]) > ((s[16] & s[11]) - s[10]), ((s[50] | s[52]) ^ s[40]) <= 0x4C, (s[19] | s[41] | s[9]) >= 0x3D, ((s[6] - s[26]) | s[47]) < (s[2] + s[18] * s[34]), ((s[21] + s[11]) * s[34]) <= 0x70 ), weight=asd)

asd = 3
sss.add_soft( And((s[1] * s[9] - s[33]) <= 4, (s[47] | s[45] | s[53]) > (s[50] + s[40] * s[29]), ((s[42] * s[33]) | s[23]) >= 0xD4 ), weight=asd)

asd = 3
sss.add_soft( And(((s[32] - s[37]) ^ s[10]) > (s[20] + s[27] - s[2]), ((s[12] - s[42]) & s[49]) < (s[24] + s[2] + s[25]), ((s[14] | s[5]) * s[4]) >= 0x22 ), weight=asd)

v108 = s[34]
asd = 10
sss.add_soft( And(((s[34] & s[14]) | s[52]) >= 0x63, (s[53] + s[40] * s[39]) < (s[50] ^ s[47] | s[53]), (s[11] | s[14] | s[1]) > (s[16] & s[9] ^ s[31]), ((s[15] - s[3]) | s[9]) < (s[22] - s[18] + s[24]), ((s[55] + s[20]) * s[53]) >= 0xE1, ((s[46] | s[7]) & s[26]) < ((s[55] * s[52]) & s[27]) ), weight=asd)
v108 = s[34]

v109 = s[13]
asd = 5
sss.add_soft( And((s[11] ^ s[13] ^ v108) < ((s[4] | s[13]) ^ s[32]), ((s[45] | s[29]) ^ s[14]) >= 0x45, ((s[14] - s[10]) & s[44]) <= 0x33, (s[49] & s[3] & s[54]) >= 3, ((s[25] ^ s[41]) - s[45]) < (s[53] + s[39] * s[40]), ((s[37] | s[25]) - s[11]) >= 0x43 ), weight=asd)
v109 = s[13]

v110 = s[45]
v111 = s[51]
asd = 3
sss.add_soft( And(((s[45] & v109) - s[33]) < ((s[50] | s[1]) - s[51]), ((s[46] + s[29]) ^ s[12]) <= 0x4F, (s[6] + s[18] - s[5]) >= 0x74 ), weight=asd)
v111 = s[51]
v110 = s[45]

asd = 10
sss.add_soft( And((v111 * s[46] - v110) >= 0x70, (s[6] + s[17] * s[2]) <= 0x3D, ((s[4] | s[36]) & s[23]) < ((s[53] ^ s[49]) * s[30]), (s[13] - (s[4] + s[9])) < ((s[8] ^ s[2]) + s[20]) ), weight=asd)

asd = 7
sss.add_soft( And((s[48] ^ s[32] ^ s[53]) > ((s[2] ^ s[8]) + s[20]), (s[22] | s[55] | s[37]) <= 0x79, (s[40] + s[41] - s[13]) <= 0x63, ((s[38] + s[33]) ^ s[47]) < ((s[12] & s[8]) - s[35]), ((s[23] & s[38]) * s[50]) < ((s[15] ^ s[24]) * s[27]) ), weight=asd)

v112 = s[38]
asd = 9
sss.add_soft( And(((s[38] * s[51]) ^ s[50]) > ((s[0] ^ s[44]) + s[45]), ((s[25] - s[53]) * s[41]) >= 0xF, (s[32] ^ s[4] ^ s[15]) <= 0x31 ), weight=asd)
v112 = s[38]

asd = 3
sss.add_soft( And(((s[32] * s[3]) & s[8]) < (v112 + s[54] - s[34]), ((s[50] + s[32]) | s[35]) >= 0x6F, ((s[45] * s[39]) & s[34]) < (s[1] | s[7] | s[14]) ), weight=asd)

asd = 6
sss.add_soft( And((s[22] | s[37] | s[55]) >= 0x7A, ((s[35] - s[21]) | s[6]) > ((s[1] & s[45])* s[20]), ((s[9] & s[43]) ^ s[32]) <= 2, ((s[25] & s[20]) | s[31]) < (s[3] - (s[11] + s[0])) ), weight=asd)

asd = 8
sss.add_soft( And(((s[32] * s[31]) & s[45]) < ((s[26] - s[9]) * s[43]), ((s[53] - s[1]) & s[16]) >= 0xD, (s[51] - (s[21] + s[8])) <= 0xDC ), weight=asd)

asd = 8
sss.add_soft( And(((s[44] | s[47]) ^ s[50]) <= 4, (s[28] & s[48] & s[18]) < ((s[52] + s[42]) | s[8]), ((s[7] + s[4]) * s[9]) >= 0xCC, ((s[33] * s[54]) & s[26]) < ((s[10] & s[53]) * s[49]), (s[39] - (s[9] + s[11])) <= 0xE6 ), weight=asd)

asd = 8
sss.add_soft( And(((s[45] * s[14]) ^ s[40]) >= 0x3C, (s[32] ^ s[24] ^ s[51]) > ((s[52] ^ s[12]) * s[35]) ), weight=asd)

asd = 10
sss.add_soft( And((s[5] ^ s[30] ^ s[42]) >= 0x51, ((s[27] * s[48]) & s[23]) <= 0x3A, ((s[43] - s[41]) ^ s[2]) >= 0x46 ), weight=asd)

v113 = s[26]
asd = 4
sss.add_soft( And(((s[49] + s[17]) * s[7]) < ((s[26] + s[3]) * s[1]), ((s[32] | s[41]) + s[15]) < (s[14] + s[34] - s[31]), ((s[37] | s[26]) - s[28]) >= 0x4D, ((s[18] ^ s[1]) - s[8]) >= 0x48, ((s[4] | s[7]) & s[20]) >= 0x6A, ((s[9] | s[11]) ^ s[47]) >= 0x11, ((s[13] * s[2]) & s[32]) <= 0x22, (s[54] ^ s[33] ^ s[50]) < ((s[36] | s[47]) - s[53]) ), weight=asd)
v113 = s[26]

v114 = s[35]
v115 = s[21]
asd = 1
sss.add_soft( And(((s[21] - s[33]) ^ s[4]) < ((s[35] * v113) | s[2]), ((s[46] * s[51]) | s[34]) > ((s[19] ^ s[38]) + s[27]), ((s[29] - s[36]) ^ s[41]) <= 0xFC, ((s[28] ^ s[19]) & s[20]) <= 2 ), weight=asd)
v115 = s[21]
v114 = s[35]

v116 = s[28]
v117 = s[23]
asd = 5
sss.add_soft( And(((v114 | v115) ^ s[37]) > ((s[28] | s[13]) + s[23]), ((s[16] - s[7]) ^ s[55]) < ((s[0] ^ s[47])- s[41]), ((s[40] * v115) & s[36]) >= 0x28, (s[36] * s[0] - s[46]) >= 0x1E, (s[44] ^ s[32] ^ s[3]) < ((s[34] ^ s[7]) + s[48]), ((s[2] & s[0]) + s[11]) < (s[52] ^ s[47] | s[14]), (s[54] & s[24] | s[10]) >= 0x8F, ((s[45] + s[14]) | s[6]) < ((s[19] | s[41])* s[24]) ), weight=asd)
v116 = s[28]
v117 = s[23]

v118 = s[27]
asd = 10
sss.add_soft( And(((s[24] ^ s[15]) * s[27]) < (s[11] * v116 - v117), (s[10] & s[52] | s[47]) < ((s[39] ^ s[43]) + s[47]), ((s[14] + s[39]) & s[22]) <= 2, (s[43] ^ s[15] ^ s[38]) < ((s[53] & s[0]) ^ s[4]), ((s[50] * s[44]) & s[32]) >= 0x11 ), weight=asd)
v118 = s[27]

asd = 8
sss.add_soft( And((s[43] * s[22] - v118) <= 0xBB, ((s[51] - s[26]) * s[54]) >= 0x56, (s[11] ^ (s[22] - s[43])) <= 0x1D, (s[6] & s[18] & s[35]) < ((s[8] & s[14]) + s[55]), ((s[20] ^ s[23]) & s[42]) >= 0x11, ((s[3] - s[34]) & s[11]) < ((s[28] * s[8]) & s[55]) ), weight=asd)

v119 = s[49]
asd = 7
sss.add_soft( And(((s[49] ^ s[47]) + s[0]) >= 0x4C, ((s[40] ^ s[37]) & s[26]) < ((s[4] | s[13]) + s[38]), ((s[30] * s[5]) | s[16]) < (s[10] + s[11] + s[28]) ), weight=asd)
v119 = s[49]

asd = 5
sss.add_soft( And(((s[39] | v119) & s[53]) <= 0x23, ((s[15] * s[29]) ^ s[43]) < ((s[37] & s[9]) | s[7]), (s[0] ^ s[8] ^ s[20]) >= 7 ), weight=asd)

asd = 2
sss.add_soft( And(((s[47] & s[17]) * s[29]) >= 0xB8, ((s[19] * s[36]) & s[27]) < ((s[10] - s[41]) & s[37]), ((s[15] | s[37]) & s[17]) >= 0x7D ), weight=asd)

asd = 2
sss.add_soft( And((s[8] ^ s[14] ^ s[45]) <= 0x5F, ((s[49] - s[29]) * s[15]) <= 0x19, (s[18] + s[47] * s[48]) < (s[25] * s[50] - s[37]), (s[4] & s[44] | s[37]) < ((s[16] | s[50]) & s[44]) ), weight=asd)

v120 = s[9]
asd = 9
sss.add_soft( And((s[9] | s[7] | s[28]) < ((s[47] | s[10]) * s[2]), (s[20] + s[24] * s[22]) >= 0x12, ((s[28] - s[5]) & s[29]) < (s[15] + s[30] * s[1]), ((s[26] ^ s[5]) & s[39]) < ((s[40] | s[37]) - s[6]), ((s[41] + s[26]) * s[32]) < ((s[38] + s[33]) ^ s[47]), ((s[11] | s[13]) - s[20]) <= 0xE1, ((s[35] | s[26]) ^ s[14]) < (s[40] ^ s[39] ^ s[12]) ), weight=asd)
v120 = s[9]

v121 = s[18]
asd = 3
sss.add_soft( And((((s[16] | s[18]) & s[4]) + 66) < (v120 - (s[40] + s[11]) - 39), ((s[10] | s[20]) ^ s[46]) >= 0x59, (s[32] ^ s[51] ^ s[27]) >= 0x6D, ((s[53] + v120) * s[46]) >= 0xAF, (s[14] ^ s[10] | s[22]) <= 0x5C, (s[21] * s[49] - s[36]) < (s[25] - s[22] + s[41]), ((s[45] | s[37]) ^ s[17]) >= 0xC, ((s[0] | s[25]) & s[54]) >= 0x41 ), weight=asd)
v121 = s[18]

asd = 1
sss.add_soft( And(((v121 ^ s[5]) + s[43]) >= 0x47, (s[7] & s[21] & s[30]) < ((s[1] + s[44]) * s[48]), ((s[16] * s[6]) & s[12]) > (s[14] + s[41] * s[51]), ((s[19] * s[2]) ^ s[25]) > ((s[55] ^ s[45])+ s[22]), (s[47] ^ s[16] | s[39]) < ((s[27] - s[22]) * s[39]) ), weight=asd)
v121 = s[18]

asd = 8
sss.add_soft( And((s[26] | s[14] | s[31]) < ((v121 | s[32]) ^ s[20]), ((s[51] + s[20]) ^ s[45]) < ((s[28] | s[6]) - s[16]), (s[47] + s[54] - s[38]) >= 9, ((s[50] & s[36]) * s[12]) <= 0x85, ((s[27] + s[5]) ^ s[50]) < ((s[35] ^ s[50]) + s[54]) ), weight=asd)

asd = 3
sss.add_soft( And(((s[0] ^ s[21]) - s[9]) <= 0x24, ((s[17] * s[15]) | s[18]) >= 0xFD, (s[32] ^ (s[9] | s[21])) > ((s[19] | s[40]) * s[31]) ), weight=asd)

v122 = s[18]
asd = 4
sss.add_soft( And(((s[31] | s[18]) + s[15]) <= 0x80, ((s[19] * s[36]) & s[27]) > ((s[9] | s[52]) + s[24]), (s[7] ^ s[10] ^ s[33]) <= 0x49 ), weight=asd)
v122 = s[18]

v123 = s[42]
asd = 9
sss.add_soft( And(((v122 + s[8]) ^ s[42]) <= 0x61, ((s[34] & s[7]) | s[50]) >= 0x60, ((s[28] - s[6]) & s[37]) >= 0x43 ), weight=asd)
v123 = s[42]

asd = 9
sss.add_soft( And(((v123 & s[35]) | s[6]) <= 0x6C, ((s[52] | s[49]) * s[14]) >= 0x47, ((s[11] | s[28]) - s[50]) <= 0xFC, ((s[23] + s[15]) ^ s[51]) < ((s[22] & s[36]) ^ s[40]), ((s[31] | s[35]) - s[20]) < (s[8] * s[36] - s[48]), (s[9] - (s[11] + s[41])) < ((s[12] & s[6]) * s[40]) ), weight=asd)

asd = 10
sss.add_soft( And(((s[18] + s[15]) & s[11]) > (s[9] + s[25] - s[28]), ((s[47] ^ s[42]) * s[50]) >= 0x8E, (s[22] & s[4] & s[53]) <= 0x6E, (s[31] ^ s[48] ^ s[26]) <= 0x37, ((s[30] & s[26]) - s[2]) >= 0xD8, (((s[7] | s[39]) ^ s[21]) - 125) < ((s[34] ^ s[26]) - s[10] - 44) ), weight=asd)

v124 = s[3]
asd = 8
sss.add_soft( And(((s[7] & s[39]) * s[35]) < ((s[16] | s[27]) - s[3]), ((s[14] | s[39]) * s[24]) <= 0xFC, ((s[38] + s[46]) | s[54]) > (s[21] + s[6] * s[55]), ((s[0] | s[35]) ^ s[21]) < ((s[44] | s[42]) - s[21]) ), weight=asd)
v124 = s[3]

asd = 3
sss.add_soft( And(((s[55] & v124) * s[54]) < ((s[20] ^ s[52]) * s[47]), ((s[11] | s[32]) * s[16]) <= 0xE4, ((s[20] - s[50]) & s[29]) >= 0x18 ), weight=asd)

asd = 2
sss.add_soft( And(((s[51] & s[24]) + s[40]) <= 0x89, ((s[39] ^ s[34]) - s[54]) >= 0x21, ((s[10] + s[25]) & s[26]) > (s[42] + s[40] + s[45]), ((s[16] * s[26]) | s[28]) > ((s[2] + s[25]) * s[32]), ((s[46] + s[5]) ^ s[44]) > ((s[14] | s[39])+ s[23]) ), weight=asd)

v125 = s[55]
asd = 2
sss.add_soft( And((s[5] | s[12] | s[31]) < ((s[55] & s[1]) * s[36]), ((s[38] - s[42]) & s[41]) < ((s[28] + s[10]) | s[25]), ((s[34] + s[28]) | s[17]) >= 0xFD ), weight=asd)
v125 = s[55]

asd = 8
sss.add_soft( And((s[29] & s[10] | s[7]) < ((s[16] - s[7]) ^ v125), (s[23] * s[8] * s[48]) <= 0x87, (s[50] * s[48] * s[24]) >= 0x54, (s[21] ^ s[36] ^ s[30]) <= 0x3A, ((s[20] | s[34]) - s[41]) <= 0x38 ), weight=asd)

asd = 3
sss.add_soft( And(((s[19] & s[3]) + s[17]) < ((s[38] | s[12]) + s[9]), ((s[29] | s[4]) & s[43]) >= 0x28, ((s[55] ^ s[17]) * s[25]) <= 0x4F ), weight=asd)

asd = 5
sss.add_soft( And(((s[48] - s[45]) * s[51]) >= 0x62, ((s[53] & s[1]) * s[10]) < (s[9] * s[50] * s[26] + 65), (s[13] - s[51] + s[43]) >= 0x41 ), weight=asd)

v126 = s[21]
v127 = s[26]
asd = 6
sss.add_soft( And((s[21] ^ s[50] | s[40]) < ((s[16] + s[39]) | s[26]), ((s[6] * s[51]) ^ s[39]) >= 0x16, ((s[18] + s[8]) ^ s[24]) <= 0x64, (s[0] + s[51] - s[9]) < (s[48] - (s[16] + s[15])), (s[27] & s[0] | s[30]) < (s[45] - (s[0] + s[25])) ), weight=asd)
v127 = s[26]
v126 = s[21]

asd = 7
sss.add_soft( And(((s[48] + s[49]) | s[44]) > (v126 * v127 * s[0]), ((s[39] + s[23]) * s[11]) < ((s[31] & s[49]) * s[55]), ((s[5] ^ s[33]) & s[25]) > ((s[37] ^ s[52]) - s[30]), ((s[10] * s[45]) | s[27]) < ((s[34] * s[25]) | s[33]), (s[19] ^ s[48] | s[24]) >= 0x45, ((s[32] & v127) + s[35]) >= 0x7E, ((s[8] * v126) | s[40]) < ((s[12] ^ s[39]) & s[52]), (s[32] + s[55] + s[8]) < (s[52] + s[0] - s[15]) ), weight=asd)

asd = 7
sss.add_soft( And(((s[27] + s[12]) ^ s[36]) > (s[8] * s[12] - s[50]), ((s[16] - s[9]) & s[10]) < ((s[51] * s[25]) ^ s[34]), ((s[6] * s[16]) & s[12]) < (s[2] | s[10] | s[13]), (s[44] * s[55] - s[46]) <= 0x2F, (s[15] + s[10] - s[54]) < ((s[52] - s[28]) * s[42]) ), weight=asd)

asd = 7
sss.add_soft( And(((s[9] * s[44]) & s[34]) < ((s[14] + s[45]) | s[6]), ((s[31] + s[37]) & s[22]) <= 2, ((s[52] ^ s[47]) * s[55]) < ((s[46] ^ s[37]) - s[28]), (s[39] * s[30] * s[2]) <= 0x41, ((s[4] & s[52]) ^ s[17]) < (s[51]- (s[19]+ s[29])) ), weight=asd)

asd = 7
sss.add_soft( And(((s[54] + s[37]) & s[23]) < ((s[21] - s[33]) ^ s[4]), ((s[17] ^ s[4]) * s[10]) >= 0x4D, ((s[16] | s[24]) * s[30]) >= 0xD3, ((s[26] | s[37]) - s[28]) <= 0x4C ), weight=asd)

v128 = s[51]
asd = 7
sss.add_soft( And((s[13] - (s[17] + s[51])) <= 0xBC, (s[31] + s[21] - s[47]) < ((s[3] | s[33]) ^ s[31]), (s[0] + s[25] + s[55]) >= 3, ((s[24] - s[36]) ^ s[11]) > ((s[10] ^ s[33]) * s[25]), ((s[26] + s[25]) ^ s[22]) < ((s[40]* s[43]) & s[7]) ), weight=asd)
v128 = s[51]

v129 = s[50]
asd = 8
sss.add_soft( And((v128 * s[50] * s[21]) < ((s[0] + s[3]) ^ s[21]), (s[43] | s[35] | s[15]) >= 0x57, ((s[47] ^ s[13]) + s[8]) >= 0x43 ), weight=asd)
v129 = s[50]

asd = 10
sss.add_soft( And(((s[37] | v129) + s[46]) <= 0xD1 ), weight=asd)

asd = 2
sss.add_soft( And(((s[27] ^ s[52]) - s[44]) <= 0x1B, (s[21] * s[41] * s[7]) <= 0x2D, ((s[40] | s[46]) & s[7]) < ((s[31] * s[48]) | s[16]), ((s[37] ^ s[5]) & s[51]) > (s[32] * s[31] - s[38]) ), weight=asd)

v130 = s[16]
asd = 5
sss.add_soft( And(((s[10] | s[16]) * s[17]) >= 0x13, (s[19] + s[34] - s[29]) >= 0x53, ((s[47] | s[49]) + s[37]) < ((s[33] | s[37]) - s[55]) ), weight=asd)
v130 = s[16]

asd = 2
sss.add_soft( And(((s[43] + v130) ^ s[2]) <= 0x3E, ((s[20] ^ s[19]) & s[49]) < (s[31] * s[2] * s[9]) ), weight=asd)

asd = 3
sss.add_soft( And(((s[31] | s[30]) & s[49]) <= 0x33, (s[16] | s[41] | s[9]) < ((s[47] + s[8]) ^ s[28]), ((s[43] & s[44]) ^ s[25]) <= 2, ((s[35] - s[47]) ^ s[23]) >= 0xA3 ), weight=asd)

asd = 4
sss.add_soft( And(((s[40] - s[52]) ^ s[4]) >= 0x5E, (s[55] | s[5] | s[23]) > ((s[16] ^ s[3]) * s[42]), ((s[25] ^ s[40]) * s[16]) >= 0x34, (s[0] | s[20] | s[24]) < (s[54] * s[32] - s[48]), ((s[6] & s[8]) | s[39]) <= 0x30 ), weight=asd)

asd = 10
sss.add_soft( And(((s[6] - s[26]) | s[47]) > ((s[1] + s[33])* s[16]), ((s[4] + s[23]) ^ s[36]) >= 0x99, ((s[40] * s[46]) ^ s[53]) > ((s[22] & s[37]) + s[29]) ), weight=asd)

asd = 10
sss.add_soft( And(((s[27] & s[51]) | s[13]) <= 0x35, (s[24] + s[28] + s[45]) >= 0x85, ((s[17] & s[27]) ^ s[53]) <= 2, ((s[14] * s[25]) ^ s[47]) < (s[18] + s[48] * s[47]), ((s[29] + s[11]) | s[6]) <= 0x7B ), weight=asd)

v131 = s[40]
asd = 8
sss.add_soft( And(((s[48] + s[31]) ^ s[47]) > (s[40] * s[21] * s[43]), ((s[14] | s[45]) ^ s[22]) <= 0x17, (s[18] & s[12] | s[33]) >= 0x62, (s[20] | s[12] | s[16]) <= 0x89, ((s[38] ^ s[31]) - s[12]) <= 0x22 ), weight=asd)
v131 = s[40]

asd = 1
sss.add_soft( And(((s[12] | s[15]) ^ s[44]) < ((s[32] & s[52]) - v131), ((s[55] - s[43]) * s[35]) >= 0x72, (s[15] + s[1] * s[30]) < (s[21] + s[29] + s[49]), (s[51] | s[2] | s[6]) > ((s[34] & s[43]) * s[16]) ), weight=asd)

v132 = s[14]
asd = 8
sss.add_soft( And(((s[1] & s[14]) - s[39]) <= 0x10, ((s[4] - s[19]) | s[55]) < ((s[6] ^ s[55]) - s[19]) ), weight=asd)
v132 = s[14]

v133 = s[34]
asd = 1
sss.add_soft( And(((v132 + s[34]) ^ s[8]) < ((s[54] | s[21]) & s[34]), (s[51] - (s[19] + s[29])) < ((s[2] & s[36]) * s[0]), (s[54] - (s[19] + s[10])) <= 0x89, ((s[13] - s[42]) ^ s[12]) > ((s[39] | s[48]) + s[2]), (s[50] + s[10] - s[26]) < ((s[31] ^ s[24]) + s[54]) ), weight=asd)
v133 = s[34]

asd = 6
sss.add_soft( And(((s[28] - v133) ^ s[7]) > ((s[52] | s[23])* s[12]), ((s[25] * s[52]) | s[9]) < ((s[54] + s[0]) | s[3]), ((s[24] - s[36]) ^ s[11]) < (s[30] - (s[41] + s[43])), ((s[22] & s[36]) ^ s[40]) < ((s[5] ^ s[23]) + s[14]), ((s[32] - s[31]) | s[5]) <= 0x3B, (s[0] + s[3] + s[16]) < ((s[53] & s[36]) - s[4]) ), weight=asd)
v133 = s[34]

v134 = s[46]
v135 = s[50]
asd = 6
sss.add_soft( And(((s[46] ^ s[2]) & v133) < ((s[17] | s[10]) + s[50]), ((s[5] + v133) ^ s[32]) <= 0xC2, ((s[14] + s[16]) & s[33]) <= 2 ), weight=asd)
v134 = s[46]
v135 = s[50]

v136 = s[8]
asd = 7
sss.add_soft( And(((s[20] ^ s[16]) & s[52]) < ((v135 & s[8]) * v134), ((s[38] + s[18]) ^ s[12]) >= 0xCD, ((s[25] - s[33]) & s[52]) <= 0xB, ((s[6] ^ s[37]) - s[47]) <= 0xCF, ((s[43] - s[41]) ^ s[2]) <= 0x45 ), weight=asd)
v136 = s[8]

asd = 3
sss.add_soft( And((v136 * s[9] - s[32]) >= 0xD2, ((s[32] - s[20]) ^ s[29]) < ((s[52] & s[9]) ^ s[28]) ), weight=asd)

asd = 2
sss.add_soft( And((s[25] & s[0] & s[36]) <= 2, ((s[1] - s[34]) ^ s[33]) <= 0x82, (s[48] | s[49] | s[43]) < (s[2] - s[29] + s[15]) ), weight=asd)

v137 = s[50]
asd = 10
sss.add_soft( And((s[52] + s[24] + s[35]) < ((s[27] + s[5]) ^ s[50]), (s[45] * s[27] - s[21]) >= 0x52, (s[41] + s[50] * s[35]) >= 0xE0, ((s[2] * s[19]) ^ s[25]) < ((s[7] - s[54])* s[24]) ), weight=asd)
v137 = s[50]

v138 = s[23]
v139 = s[28]
asd = 6
sss.add_soft( And((s[11] * s[28] - s[23]) < ((s[38] & s[23]) * v137), ((s[7] + s[36]) & s[43]) >= 5, ((s[53] & s[5]) ^ s[35]) < ((s[37] - s[8])* s[43]) ), weight=asd)
v139 = s[28]
v138 = s[23]

asd = 8
sss.add_soft( And(((v138 & v139) * s[43]) <= 0x67, (s[41] | s[19] | s[20]) >= 0x6C, (s[10] ^ s[6] | s[37]) < ((s[44] - s[33]) ^ s[36]), (s[15] | s[49] | s[31]) <= 0x94, ((s[45] - s[1]) | s[13]) > ((s[17] & s[52])- s[34]) ), weight=asd)

v140 = s[37]
asd = 7
sss.add_soft( And((s[7] ^ s[37] | s[9]) <= 0x40, ((s[0] ^ s[14]) * s[30]) >= 0x18, ((s[27] - s[18]) | s[5]) < (s[48] + s[5] + s[16]) ), weight=asd)
v140 = s[37]

v141 = s[8]
asd = 4
sss.add_soft( And(((s[8] ^ s[13]) & s[5]) < (v140 & s[27] & s[45]), ((s[2] + s[11]) ^ s[22]) >= 0xCF, (s[20] & s[5] & s[43]) < (s[5] - (s[27] + s[31])), ((s[39] + s[53]) | s[32]) > (s[23] * s[11] - s[15]) ), weight=asd)
v141 = s[8]

asd = 10
sss.add_soft( And(((s[1] + s[31]) & v141) <= 0x39, ((s[46] * s[17]) ^ s[32]) < ((s[0] ^ s[33]) + s[35]), ((s[21] | s[17]) - s[9]) < ((s[25] + s[33]) * s[40]) ), weight=asd)

asd = 7
sss.add_soft( And((s[34] + s[48] - s[46]) <= 0x67, ((s[31] | s[18]) + s[15]) >= 0x81, ((s[12] | s[40]) ^ s[29]) <= 0x4A, ((s[37] * s[40]) | s[19]) >= 0xCA, (s[39] - (s[2] + s[17])) < ((s[1] + s[40]) ^ s[15]) ), weight=asd)

asd = 6
sss.add_soft( And((s[29] ^ s[43] | s[17]) <= 0x65, ((s[23] ^ s[47]) & s[0]) < ((s[30] | s[31]) ^ s[3]), ((s[25] & s[53]) - s[40]) >= 0xB8, ((s[19] & s[42]) | s[10]) < ((s[26] - s[6]) ^ s[21]) ), weight=asd)

asd = 6
sss.add_soft( And(((s[33] | s[50]) * s[26]) >= 0xA , ((s[48] - s[45]) * s[51]) <= 0x61 ), weight=asd)

asd = 10
sss.add_soft( And(((s[0] & s[55]) - s[28]) <= 0x1B, ((s[1] + s[44]) * s[48]) < (s[47] | s[48] | s[34]) ), weight=asd)

v142 = s[40]
asd = 5
sss.add_soft( And(((s[40] ^ s[49]) & s[12]) < (s[25] - (s[29] + s[2])), (s[44] * s[24] - s[8]) >= 0x46, ((s[37] | s[15]) & s[17]) <= 0x7C, ((s[43] + s[47]) * s[44]) < (s[7] * (s[17] + s[49])) ), weight=asd)
v142 = s[40]

asd = 9
sss.add_soft( And((s[3] + s[24] * s[6]) < ((s[41] - v142) * s[16]), (s[28] * s[7] - s[12]) >= 0xD9, ((s[51] * s[54]) ^ s[2]) <= 0x10, (s[2] * s[24] - s[47]) <= 0xDA, (s[31] & s[54] & s[19]) < (s[11] | v142 | s[10]) ), weight=asd)

asd = 3
sss.add_soft( And(((s[29] | s[45]) ^ s[14]) <= 0x44, ((s[30] ^ s[4]) - s[2]) <= 0xA8, ((s[48] & s[36]) * s[11]) <= 0xCC, ((s[28] - s[5]) & s[29]) > (s[49] + s[29] + s[21]), ((s[2] - s[41]) ^ s[34]) >= 0x3D, ((s[10] * s[9]) & s[35]) >= 0x23 ), weight=asd)

asd = 7
sss.add_soft( And((s[2] * s[10] * s[15]) < ((s[34] & s[43]) * s[16]), ((s[33] - s[44]) | s[15]) <= 0x5B, ((s[3] ^ s[33]) * s[28]) <= 0x36, ((s[2] - s[41]) ^ s[34]) <= 0x3C, (s[30] & s[31] | s[4]) < (s[20] + s[21] * s[27]), ((s[49] & s[31]) * s[55]) < (s[50] + s[53] - s[51]) ), weight=asd)

asd = 9
sss.add_soft( And(((s[54] + s[0]) | s[3]) < (s[24] + s[0] + s[17]), ((s[43] - s[39]) & s[54]) < ((s[16] | s[23]) ^ s[22]), ((s[44] + s[43]) ^ s[9]) > ((s[36] | s[19])- s[32]), ((s[30] | s[17]) ^ s[39]) < (s[14] + s[2] * s[23]), ((s[35] + s[3]) | s[15]) >= 0x74 ), weight=asd)

asd = 1
sss.add_soft( And((s[51] - (s[21] + s[8])) >= 0xDD, ((s[52] * s[34]) | s[33]) <= 0x59, ((s[42] + s[0]) | s[12]) >= 0xC1, ((s[43] + s[12]) * s[2]) >= 0xD9 ), weight=asd)

asd = 7
sss.add_soft( And((s[22] & s[12] & s[18]) <= 0x1A, ((s[33] - s[13]) ^ s[51]) <= 0x1D, (s[51] * s[33] * s[37]) >= 0x7D, (s[34] - s[46] + s[48]) >= 0x68, ((s[36] | s[13]) + s[41]) <= 0x88, ((s[45] | s[33]) & s[21]) > ((s[52] - s[28]) * s[42]), ((s[54] | s[52]) ^ s[38]) >= 0x66, ((s[40] + s[18]) | s[31]) < (s[44] - s[40] + s[55]) ), weight=asd)

asd = 7
sss.add_soft( And((s[52] - s[33] + s[25]) >= 0xB , ((s[41] ^ s[44]) * s[26]) <= 2 ), weight=asd)

asd = 5
sss.add_soft( And((s[46] + s[8] * s[30]) >= 0xD7, (s[5] * s[12] * s[25]) <= 0xFC, ((s[20] & s[55]) * s[37]) >= 0x3C ), weight=asd)

asd = 7
sss.add_soft( And(((s[50] ^ s[33]) * s[42]) >= 0x24, ((s[19] + s[22]) & s[40]) < ((s[5] + s[18]) * s[16]) ), weight=asd)

v143 = s[22]
asd = 7
sss.add_soft( And((s[41] * s[32] * s[35]) < ((s[22] & s[37]) + s[29]), ((s[24] & s[32]) | s[13]) < ((s[1] ^ s[46]) & s[7]), ((s[0] & s[13]) - s[3]) >= 0x9F, (s[20] & s[26] & s[40]) < (s[21] ^ (s[0] | s[35])) ), weight=asd)
v143 = s[22]

asd = 8
sss.add_soft( And(((v143 & s[10]) | s[53]) <= 0x64 ), weight=asd)
v144 = s[27]
asd = 4
sss.add_soft( And(((s[26] ^ s[32]) * s[27]) < ((s[45] & s[51]) - s[13]), ((s[30] & s[26]) - s[2]) <= 0xD7, ((s[4] | s[27]) * s[26]) >= 0x64, ((s[21] | s[24]) - s[38]) <= 0xE0, (s[23] * (s[51] + s[27])) < ((s[52] | s[36]) * s[9]) ), weight=asd)
v144 = s[27]

v145 = s[3]
asd = 4
sss.add_soft( And(((s[24] * v144) ^ s[49]) < ((s[8] & s[11]) + s[3]), ((s[18] & s[26]) - s[50]) <= 0xD8, ((s[52] | v144) ^ s[51]) > ((s[29] ^ s[14] | s[44])- 42), ((s[5] - s[52]) * s[35]) < (s[10] & s[52] | s[47]), ((s[33] | s[37]) - s[55]) < (s[12] * s[51] * s[39]) ), weight=asd)
v145 = s[3]

asd = 6
sss.add_soft( And(((s[48] ^ s[54]) * v145) <= 0x81, ((s[53] & s[51]) * s[27]) < ((s[2] ^ v145) * s[33]), ((s[27] - s[5]) ^ s[17]) < ((s[28] & s[41])- s[12]), ((s[16] ^ s[13]) * s[9]) >= 0x9B ), weight=asd)

asd = 7
sss.add_soft( And(((s[49] + s[27]) & s[15]) >= 3, ((s[53] & s[24]) | s[41]) > (s[28] * s[42] * s[40] - 8), (s[9] & s[15] & s[33]) > (s[50] - (s[12] + s[21])), ((s[31] + s[20]) & s[8]) >= 0x19 ), weight=asd)

asd = 7
sss.add_soft( And(((s[13] & s[37]) - s[10]) >= 0xA3 , ((s[28] | s[40]) - s[43]) >= 0x36 ), weight=asd)

asd = 6
sss.add_soft( And(((s[8] ^ s[39]) & s[49]) < ((s[12] ^ s[45]) - s[53]), ((s[1] ^ s[28]) & s[20]) < ((s[10] * s[45]) | s[27]), ((s[15] | s[47]) ^ s[44]) >= 0x42 ), weight=asd)

asd = 9
sss.add_soft( And(((s[3] - s[21]) | s[19]) >= 0x30 ), weight=asd)

v146 = s[0]
asd = 8
sss.add_soft( And((s[50] ^ s[16] ^ s[38]) < ((s[0] | s[53]) & s[29]), ((s[27] | s[28]) * s[23]) >= 0x47, (s[1] - (s[29] + s[30])) <= 0x91, ((s[51] & s[27]) | s[13]) >= 0x36, (s[12] + s[11] + s[3]) >= 0xCA, (s[52] - (s[19] + s[41])) >= 0xD6 ), weight=asd)
v146 = s[0]

v147 = s[55]
asd = 6
sss.add_soft( And(((s[36] ^ s[40]) + s[21]) < (s[55] - s[15] + v146), ((s[30] & s[36]) | s[45]) >= 0x54, ((s[20] + s[29]) * s[7]) <= 0xAD, ((s[23] * s[36]) & s[32]) < ((s[5] | s[12]) & s[4]) ), weight=asd)
v147 = s[55]

asd = 4
sss.add_soft( And(((s[46] - s[3]) & s[33]) > ((s[44] + s[45]) ^ v147), ((s[37] | s[15]) ^ s[45]) < ((s[53] - s[48]) * s[1]), ((s[6] & s[12]) + s[27]) <= 0x9A, ((s[8] & s[11]) + s[3]) < ((s[42] ^ s[41]) - s[48]), ((s[17] + v147) & s[22]) > (v147 + s[44] - s[40]) ), weight=asd)

asd = 4
sss.add_soft( And(((s[53] | s[1]) ^ s[50]) >= 0x4B, ((s[2] * s[30]) | s[20]) <= 0x80, ((s[27] ^ s[52]) - s[44]) >= 0x1C, ((s[15] * s[9]) & s[32]) < (s[35] & s[18] & s[6]), ((s[42] | s[9]) ^ s[23]) < (s[54] ^ s[50] ^ s[33]) ), weight=asd)

asd = 6
sss.add_soft( And(((s[9] ^ s[20]) - s[42]) <= 0x24, (s[41] | s[9] | s[37]) < (s[30] - (s[9] + s[50])), ((s[6] | s[50]) * s[55]) < (s[11] * s[23] - s[15]) ), weight=asd)

v148 = s[35]
asd = 5
sss.add_soft( And(((s[37] + s[54]) & s[23]) > ((s[35] * s[26]) | s[2]), (s[32] & s[13] & s[24]) <= 0x30, ((s[6] & s[34]) ^ s[4]) <= 0x17, ((s[3] ^ s[2]) * s[33]) < (s[1] + s[38] - s[9]), (s[19] + s[7] * s[15]) >= 0x16 ), weight=asd)
v148 = s[35]

asd = 4
sss.add_soft( And(((v148 | s[13]) + s[20]) < (s[45] + s[19] - s[48]), ((s[41] * s[12]) | s[34]) >= 0x7C ), weight=asd)


sss.add(s[0] == ord("P"))
sss.add(s[1] == ord("C"))
sss.add(s[2] == ord("T"))
sss.add(s[3] == ord("F"))
sss.add(s[4] == ord("{"))
sss.add(s[-1] == ord("}"))

for c in s[5:-1]:
    sss.add(Or(And(c >= ord('0'), c <= ord('9')),
               And(c >= ord('a'), c <= ord('f'))))


print("checking")
if sss.check() == sat:
    print("getting model")
    m = sss.model()
    print(''.join([chr(m[s[i]].as_long()) for i in range(56)]))
    print(real)

# PCTF{3bd87f725da2d67a7a2465a65c77ac0aef2e425417988929b5}
